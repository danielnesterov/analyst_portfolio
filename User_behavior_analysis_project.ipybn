{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Анализ поведения пользователей мобильного приложения\n",
    "\n",
    "**Проблема**:\n",
    "\n",
    "Менеджмент стартап-компании, которая занимается продажей продуктов питания заказал комплексное исследование поведения пользователей мобильного приложения компании. *Во-первых*, они хотят знать какая часть пользователей остается на каждом этапе совершения покупок. *Во-вторых*, как изменение шрифта повлияло на поведение пользователей.\n",
    "\n",
    "**Цели**:\n",
    "\n",
    "- Изучить воронку событий, чтобы определить, какая часть пользователей остается на каждом этапе совершения покупок.\n",
    "- Проанализировать результаты A/A/B-теста, чтобы узнать как изменение шрифта повлияло на поведение пользователей.\n",
    "\n",
    "**План**\n",
    "\n",
    "Часть 1. Обзор и предобработка данных.\n",
    "\n",
    "Часть 2. Анализ данных, воронка событий.\n",
    "\n",
    "Часть 3. Изучение результатов A/A/B-теста.\n",
    "\n",
    "Часть 4. Общие выводы."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Обзор и предобработка данных\n",
    "### Импорт библиотек"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# импорт библиотек\n",
    "import pandas as pd                             # для анализа данных\n",
    "import numpy as np                              # для математических вычислений\n",
    "\n",
    "import seaborn as sns                           # для визуализации данных\n",
    "from matplotlib import pyplot as plt            # для визуализации данных\n",
    "%matplotlib inline\n",
    "\n",
    "import plotly.express as px                     # для интерактивной визуализации\n",
    "import plotly.graph_objects as go               # для интерактивной визуализации\n",
    "\n",
    "import datetime as dt                           # для преобразования к типу данных\n",
    "from datetime import datetime      \n",
    "\n",
    "from scipy import stats as st                   # для статистического анализа                  \n",
    "import math as mt                               # для математических, тригонометрических и логарифмических операций\n",
    "\n",
    "import warnings                                 # для предупреждений в программе \n",
    "warnings.filterwarnings('ignore')               # игнорировать предупреждения"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "# создание переменной с датафреймом \n",
    "data = pd.read_csv('logs.csv',sep='\\t')\n",
    "\n",
    "# с помощью pd.option настроим вывод так чтобы\n",
    "pd.options.display.max_columns = None               # чтобы не обрезались колонки\n",
    "pd.options.display.max_rows = None                  # чтобы видеть все содержимое вывода\n",
    "pd.options.display.max_colwidth = -1                # текст в ячейке отражался полностью вне зависимости от длины;\n",
    "pd.options.display.float_format = '{:.2f}'.format   # все числа отражались с двумя знаками после запятой."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "# установка эстетических параметров графиков \n",
    "sns.set(context='notebook', style='whitegrid', palette='Set3', font='sans-serif', font_scale=1.2) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Обзор данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'5 первых строк таблицы:'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>EventName</th>\n",
       "      <th>DeviceIDHash</th>\n",
       "      <th>EventTimestamp</th>\n",
       "      <th>ExpId</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MainScreenAppear</td>\n",
       "      <td>4575588528974610257</td>\n",
       "      <td>1564029816</td>\n",
       "      <td>246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MainScreenAppear</td>\n",
       "      <td>7416695313311560658</td>\n",
       "      <td>1564053102</td>\n",
       "      <td>246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>PaymentScreenSuccessful</td>\n",
       "      <td>3518123091307005509</td>\n",
       "      <td>1564054127</td>\n",
       "      <td>248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CartScreenAppear</td>\n",
       "      <td>3518123091307005509</td>\n",
       "      <td>1564054127</td>\n",
       "      <td>248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>PaymentScreenSuccessful</td>\n",
       "      <td>6217807653094995999</td>\n",
       "      <td>1564055322</td>\n",
       "      <td>248</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 EventName         DeviceIDHash  EventTimestamp  ExpId\n",
       "0  MainScreenAppear         4575588528974610257  1564029816      246  \n",
       "1  MainScreenAppear         7416695313311560658  1564053102      246  \n",
       "2  PaymentScreenSuccessful  3518123091307005509  1564054127      248  \n",
       "3  CartScreenAppear         3518123091307005509  1564054127      248  \n",
       "4  PaymentScreenSuccessful  6217807653094995999  1564055322      248  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'Статистика данных:'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>DeviceIDHash</th>\n",
       "      <td>244126.00</td>\n",
       "      <td>4627568124590853120.00</td>\n",
       "      <td>2642424998963707904.00</td>\n",
       "      <td>6888746892508752.00</td>\n",
       "      <td>2372212476992240640.00</td>\n",
       "      <td>4623191541214045184.00</td>\n",
       "      <td>6932517045703054336.00</td>\n",
       "      <td>9222603179720523776.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EventTimestamp</th>\n",
       "      <td>244126.00</td>\n",
       "      <td>1564913915.84</td>\n",
       "      <td>177134.32</td>\n",
       "      <td>1564029816.00</td>\n",
       "      <td>1564756580.25</td>\n",
       "      <td>1564919395.00</td>\n",
       "      <td>1565074511.00</td>\n",
       "      <td>1565212517.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ExpId</th>\n",
       "      <td>244126.00</td>\n",
       "      <td>247.02</td>\n",
       "      <td>0.82</td>\n",
       "      <td>246.00</td>\n",
       "      <td>246.00</td>\n",
       "      <td>247.00</td>\n",
       "      <td>248.00</td>\n",
       "      <td>248.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count                   mean                    std  \\\n",
       "DeviceIDHash   244126.00 4627568124590853120.00 2642424998963707904.00   \n",
       "EventTimestamp 244126.00 1564913915.84          177134.32                \n",
       "ExpId          244126.00 247.02                 0.82                     \n",
       "\n",
       "                               min                    25%  \\\n",
       "DeviceIDHash   6888746892508752.00 2372212476992240640.00   \n",
       "EventTimestamp 1564029816.00       1564756580.25            \n",
       "ExpId          246.00              246.00                   \n",
       "\n",
       "                                  50%                    75%  \\\n",
       "DeviceIDHash   4623191541214045184.00 6932517045703054336.00   \n",
       "EventTimestamp 1564919395.00          1565074511.00            \n",
       "ExpId          247.00                 248.00                   \n",
       "\n",
       "                                  max  \n",
       "DeviceIDHash   9222603179720523776.00  \n",
       "EventTimestamp 1565212517.00           \n",
       "ExpId          248.00                  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>unique</th>\n",
       "      <th>top</th>\n",
       "      <th>freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>EventName</th>\n",
       "      <td>244126</td>\n",
       "      <td>5</td>\n",
       "      <td>MainScreenAppear</td>\n",
       "      <td>119205</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            count unique               top    freq\n",
       "EventName  244126  5      MainScreenAppear  119205"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'Общая информация о данных:'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 244126 entries, 0 to 244125\n",
      "Data columns (total 4 columns):\n",
      " #   Column          Non-Null Count   Dtype \n",
      "---  ------          --------------   ----- \n",
      " 0   EventName       244126 non-null  object\n",
      " 1   DeviceIDHash    244126 non-null  int64 \n",
      " 2   EventTimestamp  244126 non-null  int64 \n",
      " 3   ExpId           244126 non-null  int64 \n",
      "dtypes: int64(3), object(1)\n",
      "memory usage: 7.5+ MB\n"
     ]
    }
   ],
   "source": [
    "# выборка 5 строк, статистика и общая информация о датафрейме в одной мини-функции\n",
    "\n",
    "def info_df(dataframe):\n",
    "    display(\"5 первых строк таблицы:\")\n",
    "    display(dataframe.head())\n",
    "    display(\"Статистика данных:\")\n",
    "    display(dataframe.describe().T)\n",
    "    display(dataframe.describe(include='object').T)\n",
    "    display(\"Общая информация о данных:\")\n",
    "    dataframe.info()\n",
    "    \n",
    "info_df(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Стиль заголовков"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Стиль заголовков исправлен:'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "Index(['event_name', 'user_id', 'event_time', 'group'], dtype='object')"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# переименуем колонки с неправильным стилем\n",
    "data.columns = ['event_name', 'user_id', 'event_time', 'group']\n",
    "\n",
    "display('Стиль заголовков исправлен:')\n",
    "data.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Описание данных\n",
    "`event_name` — название события;\n",
    "\n",
    "`user_id` — уникальный идентификатор пользователя;\n",
    "\n",
    "`event_time` — время события;\n",
    "\n",
    "`group` — номер эксперимента: 246 и 247 — контрольные группы, а 248 — экспериментальная."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Колонка `event_name`**\n",
    "\n",
    "Посмотрим на уникальные значения в колонке `event_name`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Уникальные значения в колонке \"event_name\":'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "MainScreenAppear           119205\n",
       "OffersScreenAppear         46825 \n",
       "CartScreenAppear           42731 \n",
       "PaymentScreenSuccessful    34313 \n",
       "Tutorial                   1052  \n",
       "Name: event_name, dtype: int64"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "display('Уникальные значения в колонке \"event_name\":')\n",
    "data['event_name'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В колонке `event_time` содержатся названия 4 этапов совершения покупки: \n",
    "- `главный экран`; \n",
    "- `выбор товара`;\n",
    "- `переход в корзину`;\n",
    "- `экран подтверждения покупки`.\n",
    "\n",
    "Кроме того, содержится название экрана с руководством пользователя.\n",
    "\n",
    "Дубликатов нет."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Изменение типа данных\n",
    "Изменим тип данных в колонке `event_time` на *datetime* - колонка содержит значения даты."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 244126 entries, 0 to 244125\n",
      "Data columns (total 4 columns):\n",
      " #   Column      Non-Null Count   Dtype         \n",
      "---  ------      --------------   -----         \n",
      " 0   event_name  244126 non-null  object        \n",
      " 1   user_id     244126 non-null  int64         \n",
      " 2   event_time  244126 non-null  datetime64[ns]\n",
      " 3   group       244126 non-null  int64         \n",
      "dtypes: datetime64[ns](1), int64(2), object(1)\n",
      "memory usage: 7.5+ MB\n"
     ]
    }
   ],
   "source": [
    "# переведем время, представленное в секундах в нормальный формат\n",
    "data['event_time'] = pd.to_datetime(data['event_time'], unit='s')\n",
    "\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Обработка пропусков\n",
    "Посмотрим наличие пропусков."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Количество пропусков в датафреме data'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "event_name    0\n",
       "user_id       0\n",
       "event_time    0\n",
       "group         0\n",
       "dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display('Количество пропусков в датафреме data', data.isna().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Обработка дубликатов\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проверим на явные дубликаты в датафрейме `data` и удалим их при обнаружении."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Явных дубликатов в датафреме data до: 413\n",
      "Явных дубликатов в датафреме data после обработки: 0\n"
     ]
    }
   ],
   "source": [
    "print('Явных дубликатов в датафреме data до:', data.duplicated().sum())\n",
    "\n",
    "# удаляем дубликаты, для сохранения порядка индексации применим функцию reset_index()\n",
    "data = data.drop_duplicates().reset_index(drop=True)\n",
    "\n",
    "print('Явных дубликатов в датафреме data после обработки:', data.duplicated().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Создание колонки `date`\n",
    "Создадим колонку `date`, содержащую дату события."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event_name</th>\n",
       "      <th>user_id</th>\n",
       "      <th>event_time</th>\n",
       "      <th>group</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MainScreenAppear</td>\n",
       "      <td>4575588528974610257</td>\n",
       "      <td>2019-07-25 04:43:36</td>\n",
       "      <td>246</td>\n",
       "      <td>2019-07-25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MainScreenAppear</td>\n",
       "      <td>7416695313311560658</td>\n",
       "      <td>2019-07-25 11:11:42</td>\n",
       "      <td>246</td>\n",
       "      <td>2019-07-25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>PaymentScreenSuccessful</td>\n",
       "      <td>3518123091307005509</td>\n",
       "      <td>2019-07-25 11:28:47</td>\n",
       "      <td>248</td>\n",
       "      <td>2019-07-25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                event_name              user_id          event_time  group  \\\n",
       "0  MainScreenAppear         4575588528974610257 2019-07-25 04:43:36  246     \n",
       "1  MainScreenAppear         7416695313311560658 2019-07-25 11:11:42  246     \n",
       "2  PaymentScreenSuccessful  3518123091307005509 2019-07-25 11:28:47  248     \n",
       "\n",
       "         date  \n",
       "0  2019-07-25  \n",
       "1  2019-07-25  \n",
       "2  2019-07-25  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['date'] = data['event_time'].astype('datetime64[D]')\n",
    "# отрезаем нули часов/минут\n",
    "data['date'] = data['date'].dt.strftime('%Y-%m-%d') \n",
    "data.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Выводы**\n",
    "\n",
    "1. Исправлен стиль заголовков;\n",
    "2. Дубликатов и пропусков не обнаружено, удалено 413 явных дубликатов;\n",
    "3. Изменен тип данных в колонке `event_time` на *datetime* с переводом значения даты и времени в секундах в формат *год-месяц-день-часы-минуты-секунды*;\n",
    "4. Создана колонка `date` с датами событий;\n",
    "5. **Данные готовы для анализа.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Изучение данных после предобработки"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Количество и типы событий "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Общее число событий:'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "243713"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display('Общее число событий:',len(data))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Количественное распределение по типам событий:'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "MainScreenAppear           119101\n",
       "OffersScreenAppear         46808 \n",
       "CartScreenAppear           42668 \n",
       "PaymentScreenSuccessful    34118 \n",
       "Tutorial                   1018  \n",
       "Name: event_name, dtype: int64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "display('Количественное распределение по типам событий:')\n",
    "\n",
    "data['event_name'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Количество пользователей и количество событий на 1 пользователя"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Общее количество пользователей:'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "7551"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "display('Общее количество пользователей:')\n",
    "data['user_id'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Среднее количество событий на одного пользователя:'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "32"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "display('Среднее количество событий на одного пользователя:')\n",
    "round((len(data) / data['user_id'].nunique()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим на выбросы по количеству событий"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Количество событий на пользователя')"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "events_per_user = ( data\n",
    "                   .groupby('user_id')\n",
    "                   ['event_name'].count()\n",
    "                  )\n",
    "\n",
    "plt.figure(figsize=(10,4))\n",
    "ax = sns.boxplot(events_per_user, showfliers=False)\n",
    "plt.title('Распределение событий')\n",
    "plt.xlabel('Количество событий на пользователя', size=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   7551.00\n",
       "mean    32.28  \n",
       "std     65.15  \n",
       "min     1.00   \n",
       "25%     9.00   \n",
       "50%     20.00  \n",
       "75%     37.00  \n",
       "max     2307.00\n",
       "Name: event_name, dtype: float64"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events_per_user.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Распределение количества событий на пользователя сильно **смещено в левую сторону**. Основная часть значений находится от 9 до 37, медиана: 20. Значения больше 80 можно отнести к **аномальным**.\n",
    "\n",
    "Таким образом, учитывая выбросы, в качестве среднего правильнее использовать медиану - в среднем на пользователя приходится 20 событий."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Временное распределение данных"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Узнаем период распределения данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Минимальная дата события: 2019-07-25 04:43:36\n",
      "Максимальная дата события: 2019-08-07 21:15:17\n"
     ]
    }
   ],
   "source": [
    "print('Минимальная дата события:', data['event_time'].min())\n",
    "print('Максимальная дата события:', data['event_time'].max())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Распределение данных по датам"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "users_per_date = ( data\n",
    "                  .groupby('date')\n",
    "                  ['user_id'].count()\n",
    "                  .reset_index()\n",
    "                 )\n",
    "\n",
    "plt.figure(figsize=(14,7))\n",
    "ax = sns.barplot(x='date', y='user_id', data=users_per_date)\n",
    "plt.title('Количество пользователей по датам', size=16)\n",
    "plt.xlabel('дата', size=14)\n",
    "plt.ylabel('количество пользователей', size=14)\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Данные являются полными с 1 по 7 августа. Оставим в датафрейме только этот период."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Период с полными данными**. \n",
    "\n",
    "Датафрейм `logs`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "# сохранение датафрема logs с полными данными\n",
    "logs = data.query('event_time >= \"2019-08-01\"')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Доля удаленных данных**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Потеряно событий: 2826\n",
      "Доля событий до 31 июля включительно от всех данных: 1.16%\n",
      "Потеряно пользователей: 17\n",
      "Доля пользователей до 31 июля включительно от всех данных: 0.23%\n"
     ]
    }
   ],
   "source": [
    "print('Потеряно событий:', len(data) - len(logs))\n",
    "print('Доля событий до 31 июля включительно от всех данных: {:.2%}'\n",
    "      .format((len(data) - len(logs))/len(data)))\n",
    "\n",
    "print('Потеряно пользователей:', data['user_id'].nunique() - logs['user_id'].nunique())\n",
    "print('Доля пользователей до 31 июля включительно от всех данных: {:.2%}'\n",
    "      .format((int(data['user_id'].nunique()) - int(logs['user_id'].nunique()))/int(data['user_id'].nunique())))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Информация об экспериментальных группах"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проверим, что у нас есть пользователи из всех трёх экспериментальных групп."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "group\n",
       "246    2484\n",
       "247    2513\n",
       "248    2537\n",
       "Name: user_id, dtype: int64"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# распределение пользователей по группам\n",
    "logs.groupby('group')['user_id'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Выводы\n",
    "\n",
    "1. Данные содержат 4 типа события, соответствующие этапам осуществления покупки, что позволяет построить **воронку событий**.\n",
    "2. Распределение событий на пользователя содержит значительные **выбросы**, поэтому в качестве среднего лучше использовать **медиану** - 20 событий на 1 пользователя.\n",
    "3. Были оставлены данные с 1 по 7 августа включительно потому, что за этот период они являются полными. При этом потери событий составили 1,16%, а пользователей 0.23% от изначальных. Срез был сохранен в новый датафрейм `logs`.\n",
    "4. У нас имеется 3 группы A/A/B-тестирования: 246 и 247 - контрольные, а 248 - экспериментальная. Пользователи распределены в них достаточно **равномерно**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Анализ данных, воронка событий"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Частота возникновения событий\n",
    "Посмотрим, какие события есть в логах, как часто они встречаются. Отсортируем события по частоте."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MainScreenAppear           117328\n",
       "OffersScreenAppear         46333 \n",
       "CartScreenAppear           42303 \n",
       "PaymentScreenSuccessful    33918 \n",
       "Tutorial                   1005  \n",
       "Name: event_name, dtype: int64"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logs['event_name'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Событие `MainScreenAppear` (главный экран) - встречается в логах более, чем в 2,5 раза чаще, чем следующее за ним `OffersScreenAppear` (экран предложений). Что может указывать на **проблемы** перехода с первого на второй.\n",
    "\n",
    "Наименьшую частоту имеет событие `Tutorial` (руководство пользователя), что вполне закономерно - не так много людей любят изучать инструкции. Также это может указывать на то, что приложение имеет высокий уровень *юзабилити* и пользователи не испытывают потребности в инструкции по приложению."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Общая конверсия\n",
    "Рассчитаем, сколько пользователей совершали каждое из событий. Посчитаем долю пользователей, которые хоть раз совершали событие."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event</th>\n",
       "      <th>users</th>\n",
       "      <th>cr %</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MainScreenAppear</td>\n",
       "      <td>7419</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>OffersScreenAppear</td>\n",
       "      <td>4593</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CartScreenAppear</td>\n",
       "      <td>3734</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>PaymentScreenSuccessful</td>\n",
       "      <td>3539</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Tutorial</td>\n",
       "      <td>840</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     event  users  cr %\n",
       "0  MainScreenAppear         7419   98  \n",
       "1  OffersScreenAppear       4593   61  \n",
       "2  CartScreenAppear         3734   50  \n",
       "3  PaymentScreenSuccessful  3539   47  \n",
       "4  Tutorial                 840    11  "
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "funnel = ( logs\n",
    "               .pivot_table(index='event_name',\n",
    "                                 values='user_id',\n",
    "                                 aggfunc='nunique')\n",
    "               .sort_values(by='user_id', ascending=False)\n",
    "               .reset_index()\n",
    "               .rename(columns={'event_name':'event', 'user_id':'users'})\n",
    "          )\n",
    "\n",
    "#  доля пользователей, которые хоть раз совершали событие\n",
    "# cr - коэффициент конверсии - доля пользователей от общего их количества, совершивших действие на каждом шаге\n",
    "funnel['cr %'] = round(funnel['users'] / logs['user_id'].nunique() * 100)\n",
    "# переведем тип данных в целочисленный, чтобы убрать нули после запятой\n",
    "funnel['cr %'] = funnel['cr %'].astype(int)\n",
    "\n",
    "funnel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Главную страницу открывали 98% пользователей, экран с выбором товара - 61%, корзину - 50%, экран об успешной оплате - 47% пользователей. Руководство пользователя открывали только 11% пользователей."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Последовательность событий\n",
    "Удалим событие `Tutorial` (руководство пользователя) как не нужное для построения воронки событий, исходя из предположения, что последовательность событий в приложении при покупке соответствует отображенной в таблице выше."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "# сохраняем срез с 0 по 3 индекс без события Tutorial\n",
    "funnel = funnel[:4]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Конверсия в шаг\n",
    "Посчитаем, какая доля пользователей проходит на следующий шаг воронки (от числа пользователей на предыдущем)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event</th>\n",
       "      <th>users</th>\n",
       "      <th>cr %</th>\n",
       "      <th>cr_step %</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MainScreenAppear</td>\n",
       "      <td>7419</td>\n",
       "      <td>98</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>OffersScreenAppear</td>\n",
       "      <td>4593</td>\n",
       "      <td>61</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CartScreenAppear</td>\n",
       "      <td>3734</td>\n",
       "      <td>50</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>PaymentScreenSuccessful</td>\n",
       "      <td>3539</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     event  users  cr %  cr_step %\n",
       "0  MainScreenAppear         7419   98    100      \n",
       "1  OffersScreenAppear       4593   61    62       \n",
       "2  CartScreenAppear         3734   50    81       \n",
       "3  PaymentScreenSuccessful  3539   47    95       "
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# используем метод shift, чтобы сдвинуть значения в users в соответствии с шагами\n",
    "funnel['shift'] = funnel['users'].shift(periods=1, axis=0, fill_value=funnel['users'][0])\n",
    "# разделим значения столбцов для получения конверсии в шаг\n",
    "funnel['cr_step %'] = round((funnel['users'] / funnel['shift'])*100).astype('int')\n",
    "# удалим колонку сдвинутыми значениями users \n",
    "funnel.drop('shift', axis='columns', inplace=True)\n",
    "funnel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Больше всего теряется пользователей в переходе с открытия `главного экрана` к открытию экрана с `выбором товара` - целых 38%. Все остальные этапы воронки показывают умеренные потери."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Воронка событий\n",
    "Визуализируем воронку событий с помощью специального графика из pyplot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "textinfo": "value+percent previous+percent initial",
         "type": "funnel",
         "x": [
          7419,
          4593,
          3734,
          3539
         ],
         "y": [
          "MainScreenAppear",
          "OffersScreenAppear",
          "CartScreenAppear",
          "PaymentScreenSuccessful"
         ]
        }
       ],
       "layout": {
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "rgb(36,36,36)"
            },
            "error_y": {
             "color": "rgb(36,36,36)"
            },
            "marker": {
             "line": {
              "color": "rgb(234,234,242)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "rgb(234,234,242)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "rgb(36,36,36)",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "rgb(36,36,36)"
            },
            "baxis": {
             "endlinecolor": "rgb(36,36,36)",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "rgb(36,36,36)"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "rgb(231,231,240)"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "rgb(183,183,191)"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "rgb(67,103,167)"
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "tickcolor": "rgb(36,36,36)",
            "ticklen": 8,
            "ticks": "outside",
            "tickwidth": 2
           }
          },
          "colorscale": {
           "sequential": [
            [
             0,
             "rgb(2,4,25)"
            ],
            [
             0.06274509803921569,
             "rgb(24,15,41)"
            ],
            [
             0.12549019607843137,
             "rgb(47,23,57)"
            ],
            [
             0.18823529411764706,
             "rgb(71,28,72)"
            ],
            [
             0.25098039215686274,
             "rgb(97,30,82)"
            ],
            [
             0.3137254901960784,
             "rgb(123,30,89)"
            ],
            [
             0.3764705882352941,
             "rgb(150,27,91)"
            ],
            [
             0.4392156862745098,
             "rgb(177,22,88)"
            ],
            [
             0.5019607843137255,
             "rgb(203,26,79)"
            ],
            [
             0.5647058823529412,
             "rgb(223,47,67)"
            ],
            [
             0.6274509803921569,
             "rgb(236,76,61)"
            ],
            [
             0.6901960784313725,
             "rgb(242,107,73)"
            ],
            [
             0.7529411764705882,
             "rgb(244,135,95)"
            ],
            [
             0.8156862745098039,
             "rgb(245,162,122)"
            ],
            [
             0.8784313725490196,
             "rgb(246,188,153)"
            ],
            [
             0.9411764705882353,
             "rgb(247,212,187)"
            ],
            [
             1,
             "rgb(250,234,220)"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "rgb(2,4,25)"
            ],
            [
             0.06274509803921569,
             "rgb(24,15,41)"
            ],
            [
             0.12549019607843137,
             "rgb(47,23,57)"
            ],
            [
             0.18823529411764706,
             "rgb(71,28,72)"
            ],
            [
             0.25098039215686274,
             "rgb(97,30,82)"
            ],
            [
             0.3137254901960784,
             "rgb(123,30,89)"
            ],
            [
             0.3764705882352941,
             "rgb(150,27,91)"
            ],
            [
             0.4392156862745098,
             "rgb(177,22,88)"
            ],
            [
             0.5019607843137255,
             "rgb(203,26,79)"
            ],
            [
             0.5647058823529412,
             "rgb(223,47,67)"
            ],
            [
             0.6274509803921569,
             "rgb(236,76,61)"
            ],
            [
             0.6901960784313725,
             "rgb(242,107,73)"
            ],
            [
             0.7529411764705882,
             "rgb(244,135,95)"
            ],
            [
             0.8156862745098039,
             "rgb(245,162,122)"
            ],
            [
             0.8784313725490196,
             "rgb(246,188,153)"
            ],
            [
             0.9411764705882353,
             "rgb(247,212,187)"
            ],
            [
             1,
             "rgb(250,234,220)"
            ]
           ]
          },
          "colorway": [
           "rgb(76,114,176)",
           "rgb(221,132,82)",
           "rgb(85,168,104)",
           "rgb(196,78,82)",
           "rgb(129,114,179)",
           "rgb(147,120,96)",
           "rgb(218,139,195)",
           "rgb(140,140,140)",
           "rgb(204,185,116)",
           "rgb(100,181,205)"
          ],
          "font": {
           "color": "rgb(36,36,36)"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "rgb(234,234,242)",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "paper_bgcolor": "white",
          "plot_bgcolor": "rgb(234,234,242)",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "bgcolor": "rgb(234,234,242)",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "fillcolor": "rgb(67,103,167)",
           "line": {
            "width": 0
           },
           "opacity": 0.5
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "bgcolor": "rgb(234,234,242)",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           }
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "showgrid": true,
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white"
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "showgrid": true,
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white"
          }
         }
        },
        "title": {
         "text": "<b>Воронка событий в приложении</b>"
        }
       }
      },
      "text/html": [
       "<div>                            <div id=\"a0e1a588-09e2-4bb9-ad96-6cc5aa33e042\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a0e1a588-09e2-4bb9-ad96-6cc5aa33e042\")) {                    Plotly.newPlot(                        \"a0e1a588-09e2-4bb9-ad96-6cc5aa33e042\",                        [{\"textinfo\":\"value+percent previous+percent initial\",\"x\":[7419,4593,3734,3539],\"y\":[\"MainScreenAppear\",\"OffersScreenAppear\",\"CartScreenAppear\",\"PaymentScreenSuccessful\"],\"type\":\"funnel\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(234,234,242)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"rgb(36,36,36)\"},\"error_y\":{\"color\":\"rgb(36,36,36)\"},\"marker\":{\"line\":{\"color\":\"rgb(234,234,242)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"rgb(36,36,36)\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"rgb(36,36,36)\"},\"baxis\":{\"endlinecolor\":\"rgb(36,36,36)\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"rgb(36,36,36)\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"rgb(231,231,240)\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"rgb(183,183,191)\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"rgb(67,103,167)\"},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"colorscale\":{\"sequential\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"sequentialminus\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]]},\"colorway\":[\"rgb(76,114,176)\",\"rgb(221,132,82)\",\"rgb(85,168,104)\",\"rgb(196,78,82)\",\"rgb(129,114,179)\",\"rgb(147,120,96)\",\"rgb(218,139,195)\",\"rgb(140,140,140)\",\"rgb(204,185,116)\",\"rgb(100,181,205)\"],\"font\":{\"color\":\"rgb(36,36,36)\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"rgb(234,234,242)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"rgb(234,234,242)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"bgcolor\":\"rgb(234,234,242)\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"fillcolor\":\"rgb(67,103,167)\",\"line\":{\"width\":0},\"opacity\":0.5},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"bgcolor\":\"rgb(234,234,242)\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"}},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\"},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\"}}},\"title\":{\"text\":\"\\u003cb\\u003e\\u0412\\u043e\\u0440\\u043e\\u043d\\u043a\\u0430 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0439 \\u0432 \\u043f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u0438\\u003c\\u002fb\\u003e\"}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('a0e1a588-09e2-4bb9-ad96-6cc5aa33e042');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = go.Figure(go.Funnel(\n",
    "    y = funnel['event'],\n",
    "    x = funnel['users'],\n",
    "    textinfo = 'value+percent previous+percent initial'#,\n",
    "    #marker = {'color':'coral'}\n",
    "))\n",
    "\n",
    "fig.update_layout(template='seaborn',\n",
    "                  title='<b>Воронка событий в приложении</b>')\n",
    "\n",
    "fig.show()\n",
    "# prev ['indigo','blueviolet', 'mediumslateblue', 'royalblue']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "От первого события до оплаты доходит 48% пользователей."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Выводы\n",
    "\n",
    "1. Изучение воронки событий показало наличие у пользователей сложностей в переходе от 1 шага покупки товара - `открытие главного экрана` на 2 шаг - `выбора товара`. Только 62% пользователей переходят к основному разделу приложения.\n",
    "2. Это также подтверждает значительный перекос в частоте встречаемости событий в логах. Событие `открытие главного экрана` встречается более, чем в 2,5 раза чаще, чем событие `выбор товара`.\n",
    "3. Остальные этапы приобретения товара показывают умеренные потери пользователей. `Открытие корзины` - 19%, `подтверждение покупки` - 5%.\n",
    "4. Наименьшую частоту встречаемости имеет событие `руководство пользователя`, что вполне закономерно - не так много людей любят изучать инструкции. Также это может указывать на то, что приложение имеет высокий уровень *юзабилити* и пользователи не испытывают потребности в инструкции по приложению."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Изучение результатов A/A/B-теста\n",
    "\n",
    "Пользователей разбили на 3 группы: 2 контрольные со старым шрифтом и одну экспериментальную — с новым. Нужно выяснить, какой шрифт лучше. Если две контрольные группы окажутся равны, мы сможем быть уверены в точности проведенного тестирования. Если же между значениями A и A будут существенные различия, это поможет обнаружить факторы, которые привели к искажению результатов."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Проверка корректности данных для теста\n",
    "#### Соотношение пользователей в группах\n",
    "Построим график распределения пользователей по группам."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "labels": [
          246,
          247,
          248
         ],
         "marker": {
          "colors": [
           "coral",
           "mediumseagreen",
           "mediumpurple"
          ],
          "line": {
           "color": "#000000",
           "width": 1
          }
         },
         "textinfo": "value+percent",
         "type": "pie",
         "values": [
          2484,
          2513,
          2537
         ]
        }
       ],
       "layout": {
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "rgb(36,36,36)"
            },
            "error_y": {
             "color": "rgb(36,36,36)"
            },
            "marker": {
             "line": {
              "color": "rgb(234,234,242)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "rgb(234,234,242)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "rgb(36,36,36)",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "rgb(36,36,36)"
            },
            "baxis": {
             "endlinecolor": "rgb(36,36,36)",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "rgb(36,36,36)"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "rgb(231,231,240)"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "rgb(183,183,191)"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "rgb(67,103,167)"
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "tickcolor": "rgb(36,36,36)",
            "ticklen": 8,
            "ticks": "outside",
            "tickwidth": 2
           }
          },
          "colorscale": {
           "sequential": [
            [
             0,
             "rgb(2,4,25)"
            ],
            [
             0.06274509803921569,
             "rgb(24,15,41)"
            ],
            [
             0.12549019607843137,
             "rgb(47,23,57)"
            ],
            [
             0.18823529411764706,
             "rgb(71,28,72)"
            ],
            [
             0.25098039215686274,
             "rgb(97,30,82)"
            ],
            [
             0.3137254901960784,
             "rgb(123,30,89)"
            ],
            [
             0.3764705882352941,
             "rgb(150,27,91)"
            ],
            [
             0.4392156862745098,
             "rgb(177,22,88)"
            ],
            [
             0.5019607843137255,
             "rgb(203,26,79)"
            ],
            [
             0.5647058823529412,
             "rgb(223,47,67)"
            ],
            [
             0.6274509803921569,
             "rgb(236,76,61)"
            ],
            [
             0.6901960784313725,
             "rgb(242,107,73)"
            ],
            [
             0.7529411764705882,
             "rgb(244,135,95)"
            ],
            [
             0.8156862745098039,
             "rgb(245,162,122)"
            ],
            [
             0.8784313725490196,
             "rgb(246,188,153)"
            ],
            [
             0.9411764705882353,
             "rgb(247,212,187)"
            ],
            [
             1,
             "rgb(250,234,220)"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "rgb(2,4,25)"
            ],
            [
             0.06274509803921569,
             "rgb(24,15,41)"
            ],
            [
             0.12549019607843137,
             "rgb(47,23,57)"
            ],
            [
             0.18823529411764706,
             "rgb(71,28,72)"
            ],
            [
             0.25098039215686274,
             "rgb(97,30,82)"
            ],
            [
             0.3137254901960784,
             "rgb(123,30,89)"
            ],
            [
             0.3764705882352941,
             "rgb(150,27,91)"
            ],
            [
             0.4392156862745098,
             "rgb(177,22,88)"
            ],
            [
             0.5019607843137255,
             "rgb(203,26,79)"
            ],
            [
             0.5647058823529412,
             "rgb(223,47,67)"
            ],
            [
             0.6274509803921569,
             "rgb(236,76,61)"
            ],
            [
             0.6901960784313725,
             "rgb(242,107,73)"
            ],
            [
             0.7529411764705882,
             "rgb(244,135,95)"
            ],
            [
             0.8156862745098039,
             "rgb(245,162,122)"
            ],
            [
             0.8784313725490196,
             "rgb(246,188,153)"
            ],
            [
             0.9411764705882353,
             "rgb(247,212,187)"
            ],
            [
             1,
             "rgb(250,234,220)"
            ]
           ]
          },
          "colorway": [
           "rgb(76,114,176)",
           "rgb(221,132,82)",
           "rgb(85,168,104)",
           "rgb(196,78,82)",
           "rgb(129,114,179)",
           "rgb(147,120,96)",
           "rgb(218,139,195)",
           "rgb(140,140,140)",
           "rgb(204,185,116)",
           "rgb(100,181,205)"
          ],
          "font": {
           "color": "rgb(36,36,36)"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "rgb(234,234,242)",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "paper_bgcolor": "white",
          "plot_bgcolor": "rgb(234,234,242)",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "bgcolor": "rgb(234,234,242)",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "fillcolor": "rgb(67,103,167)",
           "line": {
            "width": 0
           },
           "opacity": 0.5
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "bgcolor": "rgb(234,234,242)",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           }
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "showgrid": true,
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white"
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "showgrid": true,
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white"
          }
         }
        },
        "title": {
         "text": "<b>Распределение пользователей по группам теста</b>"
        }
       }
      },
      "text/html": [
       "<div>                            <div id=\"de961431-223a-4b89-b5ea-163809fdf736\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"de961431-223a-4b89-b5ea-163809fdf736\")) {                    Plotly.newPlot(                        \"de961431-223a-4b89-b5ea-163809fdf736\",                        [{\"labels\":[246,247,248],\"textinfo\":\"value+percent\",\"values\":[2484,2513,2537],\"type\":\"pie\",\"marker\":{\"line\":{\"color\":\"#000000\",\"width\":1},\"colors\":[\"coral\",\"mediumseagreen\",\"mediumpurple\"]}}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(234,234,242)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"rgb(36,36,36)\"},\"error_y\":{\"color\":\"rgb(36,36,36)\"},\"marker\":{\"line\":{\"color\":\"rgb(234,234,242)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"rgb(36,36,36)\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"rgb(36,36,36)\"},\"baxis\":{\"endlinecolor\":\"rgb(36,36,36)\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"rgb(36,36,36)\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"rgb(231,231,240)\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"rgb(183,183,191)\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"rgb(67,103,167)\"},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"colorscale\":{\"sequential\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"sequentialminus\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]]},\"colorway\":[\"rgb(76,114,176)\",\"rgb(221,132,82)\",\"rgb(85,168,104)\",\"rgb(196,78,82)\",\"rgb(129,114,179)\",\"rgb(147,120,96)\",\"rgb(218,139,195)\",\"rgb(140,140,140)\",\"rgb(204,185,116)\",\"rgb(100,181,205)\"],\"font\":{\"color\":\"rgb(36,36,36)\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"rgb(234,234,242)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"rgb(234,234,242)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"bgcolor\":\"rgb(234,234,242)\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"fillcolor\":\"rgb(67,103,167)\",\"line\":{\"width\":0},\"opacity\":0.5},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"bgcolor\":\"rgb(234,234,242)\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"}},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\"},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\"}}},\"title\":{\"text\":\"\\u003cb\\u003e\\u0420\\u0430\\u0441\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u0435 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439 \\u043f\\u043e \\u0433\\u0440\\u0443\\u043f\\u043f\\u0430\\u043c \\u0442\\u0435\\u0441\\u0442\\u0430\\u003c\\u002fb\\u003e\"}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('de961431-223a-4b89-b5ea-163809fdf736');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# распределение пользователей по группам\n",
    "groups = ( logs\n",
    "          .groupby('group')\n",
    "          ['user_id'].nunique()\n",
    "          .reset_index()\n",
    "         )\n",
    "\n",
    "\n",
    "\n",
    "# построение круговой диаграммы\n",
    "pie = go.Pie(labels=groups['group'],\n",
    "            values=groups['user_id'],\n",
    "            textinfo='value+percent')\n",
    "\n",
    "layout = go.Layout(template='seaborn',\n",
    "                  title='<b>Распределение пользователей по группам теста</b>')\n",
    "fig = go.Figure(data=[pie], layout=layout)\n",
    "fig.update_traces(marker=dict(colors = ['coral', 'mediumseagreen', 'mediumpurple'], line=dict(color='#000000', width=1)))\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Пользователи распределены по группам равномерно, расхождение не более 0,7%."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Корректность распределения пользователей по группам\n",
    "Проверим на корректность распределения пользователей - может быть есть те, кто попал в две или все группы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Количество пользователей, попавших более, чем в одну группу равно: 0\n"
     ]
    }
   ],
   "source": [
    "group_intersections = logs.groupby('user_id').agg({'group' : ['nunique', 'unique']})\n",
    "group_intersections.columns = ['groups', 'group_names']\n",
    "group_intersections = group_intersections.query('groups > 1')\n",
    "print('Количество пользователей, попавших более, чем в одну группу равно:', len(group_intersections))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В каждой из групп уникальные пользователи."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Выводы**\n",
    "\n",
    "Данные А/А/В-теста собраны **корректно** - пользователи распределены по группам **равномерно** и в каждой из групп они **уникальны** и не пересекаются с другими."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Таблица событий для каждой группы\n",
    "Построим таблицу с количеством пользователей, их долями и конверсией в шаг по каждому событию из разных выборок."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "'''\n",
    "Функция event_group_pivot(group) \n",
    "принимает номер группы теста и возвращает сформированную таблицу\n",
    "с названием событий и с количеством пользователей по каждому \n",
    "'''\n",
    "\n",
    "def event_group_pivot(group):\n",
    "    result = (logs\n",
    "                  .query('group == @group & event_name != \"Tutorial\"')\n",
    "                  .groupby('event_name')\n",
    "                  .agg({'user_id':'nunique'})\n",
    "                  .reset_index()\n",
    "                  .sort_values(by='user_id', ascending=False)\n",
    "                  .reset_index(drop=True)\n",
    "             )\n",
    "    return result\n",
    "\n",
    "'''\n",
    "Функция event_group_ratio(df)  принимает датафрейм и возвращает его, \n",
    "дополненным колонками с долями пользователей и конверсией\n",
    "'''\n",
    "\n",
    "def event_group_ratio(df):\n",
    "    df['ratio'] = round((df['user_id'] / len(logs['user_id'].unique())),3)\n",
    "    df['success'] = df['user_id'].shift(periods=1, axis=0, fill_value=df['user_id'][0])\n",
    "    df['conv'] = round((df['user_id'] / df['success']),3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event_name</th>\n",
       "      <th>246</th>\n",
       "      <th>246_ratio</th>\n",
       "      <th>246_conv</th>\n",
       "      <th>247</th>\n",
       "      <th>247_ratio</th>\n",
       "      <th>247_conv</th>\n",
       "      <th>248</th>\n",
       "      <th>248_ratio</th>\n",
       "      <th>248_conv</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MainScreenAppear</td>\n",
       "      <td>2450</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2476</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2493</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>OffersScreenAppear</td>\n",
       "      <td>1542</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.63</td>\n",
       "      <td>1520</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.61</td>\n",
       "      <td>1531</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CartScreenAppear</td>\n",
       "      <td>1266</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.82</td>\n",
       "      <td>1238</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.81</td>\n",
       "      <td>1230</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>PaymentScreenSuccessful</td>\n",
       "      <td>1200</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.95</td>\n",
       "      <td>1158</td>\n",
       "      <td>0.15</td>\n",
       "      <td>0.94</td>\n",
       "      <td>1181</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.96</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                event_name   246  246_ratio  246_conv   247  247_ratio  \\\n",
       "0  MainScreenAppear         2450 0.33       1.00       2476 0.33         \n",
       "1  OffersScreenAppear       1542 0.20       0.63       1520 0.20         \n",
       "2  CartScreenAppear         1266 0.17       0.82       1238 0.16         \n",
       "3  PaymentScreenSuccessful  1200 0.16       0.95       1158 0.15         \n",
       "\n",
       "   247_conv   248  248_ratio  248_conv  \n",
       "0 1.00       2493 0.33       1.00       \n",
       "1 0.61       1531 0.20       0.61       \n",
       "2 0.81       1230 0.16       0.80       \n",
       "3 0.94       1181 0.16       0.96       "
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Таблица для 246 группы\n",
    "event_246_pivot = event_group_pivot(246)\n",
    "event_group_ratio(event_246_pivot)\n",
    "event_246_pivot.columns = ['event_name', '246', '246_ratio', '246_success', '246_conv']\n",
    "# Таблица для 247 группы\n",
    "event_247_pivot = event_group_pivot(247)\n",
    "event_group_ratio(event_247_pivot)\n",
    "event_247_pivot.columns = ['event_name', '247', '247_ratio', '247_success', '247_conv']\n",
    "# Таблица для 248 группы\n",
    "event_248_pivot = event_group_pivot(248)\n",
    "event_group_ratio(event_248_pivot)\n",
    "event_248_pivot.columns = ['event_name', '248', '248_ratio', '248_success', '248_conv']\n",
    "\n",
    "# объединение таблиц\n",
    "event_group_pivot = (event_246_pivot\n",
    "                         .merge(event_247_pivot, on='event_name')\n",
    "                         .merge(event_248_pivot, on='event_name'))\n",
    "event_group_pivot.drop(['246_success', '247_success', '248_success'], axis='columns', inplace=True)\n",
    "\n",
    "event_group_pivot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Воронка событий в разрезе групп"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "marker": {
          "color": "mediumpurple"
         },
         "name": "246",
         "textinfo": "value+percent previous+percent initial",
         "textposition": "inside",
         "type": "funnel",
         "x": [
          2450,
          1542,
          1266,
          1200
         ],
         "y": [
          "MainScreenAppear",
          "OffersScreenAppear",
          "CartScreenAppear",
          "PaymentScreenSuccessful"
         ]
        },
        {
         "marker": {
          "color": "mediumseagreen"
         },
         "name": "247",
         "textinfo": "value+percent previous+percent initial",
         "textposition": "inside",
         "type": "funnel",
         "x": [
          2476,
          1520,
          1238,
          1158
         ],
         "y": [
          "MainScreenAppear",
          "OffersScreenAppear",
          "CartScreenAppear",
          "PaymentScreenSuccessful"
         ]
        },
        {
         "marker": {
          "color": "coral"
         },
         "name": "248",
         "textinfo": "value+percent previous+percent initial",
         "textposition": "inside",
         "type": "funnel",
         "x": [
          2493,
          1531,
          1230,
          1181
         ],
         "y": [
          "MainScreenAppear",
          "OffersScreenAppear",
          "CartScreenAppear",
          "PaymentScreenSuccessful"
         ]
        }
       ],
       "layout": {
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "rgb(36,36,36)"
            },
            "error_y": {
             "color": "rgb(36,36,36)"
            },
            "marker": {
             "line": {
              "color": "rgb(234,234,242)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "rgb(234,234,242)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "rgb(36,36,36)",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "rgb(36,36,36)"
            },
            "baxis": {
             "endlinecolor": "rgb(36,36,36)",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "rgb(36,36,36)"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "tickcolor": "rgb(36,36,36)",
              "ticklen": 8,
              "ticks": "outside",
              "tickwidth": 2
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "tickcolor": "rgb(36,36,36)",
             "ticklen": 8,
             "ticks": "outside",
             "tickwidth": 2
            },
            "colorscale": [
             [
              0,
              "rgb(2,4,25)"
             ],
             [
              0.06274509803921569,
              "rgb(24,15,41)"
             ],
             [
              0.12549019607843137,
              "rgb(47,23,57)"
             ],
             [
              0.18823529411764706,
              "rgb(71,28,72)"
             ],
             [
              0.25098039215686274,
              "rgb(97,30,82)"
             ],
             [
              0.3137254901960784,
              "rgb(123,30,89)"
             ],
             [
              0.3764705882352941,
              "rgb(150,27,91)"
             ],
             [
              0.4392156862745098,
              "rgb(177,22,88)"
             ],
             [
              0.5019607843137255,
              "rgb(203,26,79)"
             ],
             [
              0.5647058823529412,
              "rgb(223,47,67)"
             ],
             [
              0.6274509803921569,
              "rgb(236,76,61)"
             ],
             [
              0.6901960784313725,
              "rgb(242,107,73)"
             ],
             [
              0.7529411764705882,
              "rgb(244,135,95)"
             ],
             [
              0.8156862745098039,
              "rgb(245,162,122)"
             ],
             [
              0.8784313725490196,
              "rgb(246,188,153)"
             ],
             [
              0.9411764705882353,
              "rgb(247,212,187)"
             ],
             [
              1,
              "rgb(250,234,220)"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "rgb(231,231,240)"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "rgb(183,183,191)"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "rgb(67,103,167)"
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "tickcolor": "rgb(36,36,36)",
            "ticklen": 8,
            "ticks": "outside",
            "tickwidth": 2
           }
          },
          "colorscale": {
           "sequential": [
            [
             0,
             "rgb(2,4,25)"
            ],
            [
             0.06274509803921569,
             "rgb(24,15,41)"
            ],
            [
             0.12549019607843137,
             "rgb(47,23,57)"
            ],
            [
             0.18823529411764706,
             "rgb(71,28,72)"
            ],
            [
             0.25098039215686274,
             "rgb(97,30,82)"
            ],
            [
             0.3137254901960784,
             "rgb(123,30,89)"
            ],
            [
             0.3764705882352941,
             "rgb(150,27,91)"
            ],
            [
             0.4392156862745098,
             "rgb(177,22,88)"
            ],
            [
             0.5019607843137255,
             "rgb(203,26,79)"
            ],
            [
             0.5647058823529412,
             "rgb(223,47,67)"
            ],
            [
             0.6274509803921569,
             "rgb(236,76,61)"
            ],
            [
             0.6901960784313725,
             "rgb(242,107,73)"
            ],
            [
             0.7529411764705882,
             "rgb(244,135,95)"
            ],
            [
             0.8156862745098039,
             "rgb(245,162,122)"
            ],
            [
             0.8784313725490196,
             "rgb(246,188,153)"
            ],
            [
             0.9411764705882353,
             "rgb(247,212,187)"
            ],
            [
             1,
             "rgb(250,234,220)"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "rgb(2,4,25)"
            ],
            [
             0.06274509803921569,
             "rgb(24,15,41)"
            ],
            [
             0.12549019607843137,
             "rgb(47,23,57)"
            ],
            [
             0.18823529411764706,
             "rgb(71,28,72)"
            ],
            [
             0.25098039215686274,
             "rgb(97,30,82)"
            ],
            [
             0.3137254901960784,
             "rgb(123,30,89)"
            ],
            [
             0.3764705882352941,
             "rgb(150,27,91)"
            ],
            [
             0.4392156862745098,
             "rgb(177,22,88)"
            ],
            [
             0.5019607843137255,
             "rgb(203,26,79)"
            ],
            [
             0.5647058823529412,
             "rgb(223,47,67)"
            ],
            [
             0.6274509803921569,
             "rgb(236,76,61)"
            ],
            [
             0.6901960784313725,
             "rgb(242,107,73)"
            ],
            [
             0.7529411764705882,
             "rgb(244,135,95)"
            ],
            [
             0.8156862745098039,
             "rgb(245,162,122)"
            ],
            [
             0.8784313725490196,
             "rgb(246,188,153)"
            ],
            [
             0.9411764705882353,
             "rgb(247,212,187)"
            ],
            [
             1,
             "rgb(250,234,220)"
            ]
           ]
          },
          "colorway": [
           "rgb(76,114,176)",
           "rgb(221,132,82)",
           "rgb(85,168,104)",
           "rgb(196,78,82)",
           "rgb(129,114,179)",
           "rgb(147,120,96)",
           "rgb(218,139,195)",
           "rgb(140,140,140)",
           "rgb(204,185,116)",
           "rgb(100,181,205)"
          ],
          "font": {
           "color": "rgb(36,36,36)"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "rgb(234,234,242)",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "paper_bgcolor": "white",
          "plot_bgcolor": "rgb(234,234,242)",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "bgcolor": "rgb(234,234,242)",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "rgb(234,234,242)",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "showgrid": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "fillcolor": "rgb(67,103,167)",
           "line": {
            "width": 0
           },
           "opacity": 0.5
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           },
           "bgcolor": "rgb(234,234,242)",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "showgrid": true,
            "ticks": ""
           }
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "showgrid": true,
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white"
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "showgrid": true,
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white"
          }
         }
        },
        "title": {
         "text": "<b>Воронка событий в приложении по группам</b>"
        }
       }
      },
      "text/html": [
       "<div>                            <div id=\"8d092f0f-c20f-40b7-87e4-1c07c8696e38\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8d092f0f-c20f-40b7-87e4-1c07c8696e38\")) {                    Plotly.newPlot(                        \"8d092f0f-c20f-40b7-87e4-1c07c8696e38\",                        [{\"marker\":{\"color\":\"mediumpurple\"},\"name\":\"246\",\"textinfo\":\"value+percent previous+percent initial\",\"textposition\":\"inside\",\"x\":[2450,1542,1266,1200],\"y\":[\"MainScreenAppear\",\"OffersScreenAppear\",\"CartScreenAppear\",\"PaymentScreenSuccessful\"],\"type\":\"funnel\"},{\"marker\":{\"color\":\"mediumseagreen\"},\"name\":\"247\",\"textinfo\":\"value+percent previous+percent initial\",\"textposition\":\"inside\",\"x\":[2476,1520,1238,1158],\"y\":[\"MainScreenAppear\",\"OffersScreenAppear\",\"CartScreenAppear\",\"PaymentScreenSuccessful\"],\"type\":\"funnel\"},{\"marker\":{\"color\":\"coral\"},\"name\":\"248\",\"textinfo\":\"value+percent previous+percent initial\",\"textposition\":\"inside\",\"x\":[2493,1531,1230,1181],\"y\":[\"MainScreenAppear\",\"OffersScreenAppear\",\"CartScreenAppear\",\"PaymentScreenSuccessful\"],\"type\":\"funnel\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(234,234,242)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"rgb(36,36,36)\"},\"error_y\":{\"color\":\"rgb(36,36,36)\"},\"marker\":{\"line\":{\"color\":\"rgb(234,234,242)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"rgb(36,36,36)\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"rgb(36,36,36)\"},\"baxis\":{\"endlinecolor\":\"rgb(36,36,36)\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"rgb(36,36,36)\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2},\"colorscale\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"rgb(231,231,240)\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"rgb(183,183,191)\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"rgb(67,103,167)\"},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"tickcolor\":\"rgb(36,36,36)\",\"ticklen\":8,\"ticks\":\"outside\",\"tickwidth\":2}},\"colorscale\":{\"sequential\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]],\"sequentialminus\":[[0.0,\"rgb(2,4,25)\"],[0.06274509803921569,\"rgb(24,15,41)\"],[0.12549019607843137,\"rgb(47,23,57)\"],[0.18823529411764706,\"rgb(71,28,72)\"],[0.25098039215686274,\"rgb(97,30,82)\"],[0.3137254901960784,\"rgb(123,30,89)\"],[0.3764705882352941,\"rgb(150,27,91)\"],[0.4392156862745098,\"rgb(177,22,88)\"],[0.5019607843137255,\"rgb(203,26,79)\"],[0.5647058823529412,\"rgb(223,47,67)\"],[0.6274509803921569,\"rgb(236,76,61)\"],[0.6901960784313725,\"rgb(242,107,73)\"],[0.7529411764705882,\"rgb(244,135,95)\"],[0.8156862745098039,\"rgb(245,162,122)\"],[0.8784313725490196,\"rgb(246,188,153)\"],[0.9411764705882353,\"rgb(247,212,187)\"],[1.0,\"rgb(250,234,220)\"]]},\"colorway\":[\"rgb(76,114,176)\",\"rgb(221,132,82)\",\"rgb(85,168,104)\",\"rgb(196,78,82)\",\"rgb(129,114,179)\",\"rgb(147,120,96)\",\"rgb(218,139,195)\",\"rgb(140,140,140)\",\"rgb(204,185,116)\",\"rgb(100,181,205)\"],\"font\":{\"color\":\"rgb(36,36,36)\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"rgb(234,234,242)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"rgb(234,234,242)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"bgcolor\":\"rgb(234,234,242)\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"rgb(234,234,242)\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"showgrid\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"fillcolor\":\"rgb(67,103,167)\",\"line\":{\"width\":0},\"opacity\":0.5},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"},\"bgcolor\":\"rgb(234,234,242)\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\"}},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\"},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showgrid\":true,\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\"}}},\"title\":{\"text\":\"\\u003cb\\u003e\\u0412\\u043e\\u0440\\u043e\\u043d\\u043a\\u0430 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u0439 \\u0432 \\u043f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u0438 \\u043f\\u043e \\u0433\\u0440\\u0443\\u043f\\u043f\\u0430\\u043c\\u003c\\u002fb\\u003e\"}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('8d092f0f-c20f-40b7-87e4-1c07c8696e38');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = go.Figure(go.Funnel(\n",
    "    name='246',\n",
    "    y = event_group_pivot['event_name'],\n",
    "    x = event_group_pivot['246'],\n",
    "    textposition = 'inside',\n",
    "    textinfo = 'value+percent previous+percent initial',\n",
    "    marker = {'color': 'mediumpurple'}\n",
    "))\n",
    "\n",
    "fig.add_trace(go.Funnel(\n",
    "    name='247',\n",
    "    y = event_group_pivot['event_name'],\n",
    "    x = event_group_pivot['247'],\n",
    "    textposition = 'inside',\n",
    "    textinfo = 'value+percent previous+percent initial',\n",
    "    marker = {'color': 'mediumseagreen'}\n",
    "))\n",
    "\n",
    "fig.add_trace(go.Funnel(\n",
    "    name='248',\n",
    "    y = event_group_pivot['event_name'],\n",
    "    x = event_group_pivot['248'],\n",
    "    textposition = 'inside',\n",
    "    textinfo = 'value+percent previous+percent initial',\n",
    "    marker = {'color': 'coral'}\n",
    "))\n",
    "\n",
    "fig.update_layout(template='seaborn',\n",
    "                  title='<b>Воронка событий в приложении по группам</b>')\n",
    "\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Самое популярное событие - `главный экран`, 100% охват пользователей.\n",
    "\n",
    "Группы отличаются друг от друга 1-2 процентами, что не существенно. Но окончательное решение о различии, мы сможем принять после **статистического анализа**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Выводы**\n",
    "1. Анализ воронки событий в разрезе групп показал **отсутствие существенных различий** между группами.\n",
    "2. Самое популярное событие - `главный экран`, 100% охват пользователей."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Статистический анализ A/A/B-теста\n",
    "#### Таблицы `trials` и `successes`\n",
    "\n",
    "Создадим таблицу `trials` с общим количеством пользователей по группам и объединенными контрольными группами."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>group</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>2484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>2513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>2537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246+247</th>\n",
       "      <td>4997</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         user_id\n",
       "group           \n",
       "246      2484   \n",
       "247      2513   \n",
       "248      2537   \n",
       "246+247  4997   "
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trials  = ( logs\n",
    "           .groupby('group',as_index = False)\n",
    "           ['user_id'].nunique()\n",
    "          )\n",
    "\n",
    "trials.loc[3] = ['246+247', 4997]\n",
    "# установим в качестве индексов значения колонки group\n",
    "trials = trials.set_index(trials.columns[0])\n",
    "trials"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>group</th>\n",
       "      <th>246</th>\n",
       "      <th>247</th>\n",
       "      <th>248</th>\n",
       "      <th>246+247</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>event_name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CartScreenAppear</th>\n",
       "      <td>1266</td>\n",
       "      <td>1238</td>\n",
       "      <td>1230</td>\n",
       "      <td>2504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MainScreenAppear</th>\n",
       "      <td>2450</td>\n",
       "      <td>2476</td>\n",
       "      <td>2493</td>\n",
       "      <td>4926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OffersScreenAppear</th>\n",
       "      <td>1542</td>\n",
       "      <td>1520</td>\n",
       "      <td>1531</td>\n",
       "      <td>3062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PaymentScreenSuccessful</th>\n",
       "      <td>1200</td>\n",
       "      <td>1158</td>\n",
       "      <td>1181</td>\n",
       "      <td>2358</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "group                     246   247   248  246+247\n",
       "event_name                                        \n",
       "CartScreenAppear         1266  1238  1230  2504   \n",
       "MainScreenAppear         2450  2476  2493  4926   \n",
       "OffersScreenAppear       1542  1520  1531  3062   \n",
       "PaymentScreenSuccessful  1200  1158  1181  2358   "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "successes = logs.pivot_table(index='event_name', columns='group', values='user_id', aggfunc='nunique')\n",
    "successes['246+247'] = successes[246] + successes[247]\n",
    "successes.drop(['Tutorial'], inplace=True)\n",
    "successes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Определение функции z_test\n",
    "Поскольку сравнивать мы будем не целостные выборки, а их части, воспользуемся z-тестом.\n",
    "\n",
    "Определим функцию z_test."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "'''\n",
    "Функция z_test(group_1, group_2, event_name, alpha) \n",
    "принимает доли двух выборок, событие и значение уровня значимости \n",
    "и возвращает p-значение и результат статистической проверки\n",
    "о равенстве долей z-критерием.\n",
    "'''\n",
    "\n",
    "def z_test(group_1, group_2, event_name, alpha): \n",
    "    # количество пользователей оставшихся на каждом событии\n",
    "    successes_1 = successes.loc[event_name, group_1]\n",
    "    successes_2 = successes.loc[event_name, group_2] \n",
    "    # общее количество количество пользователей\n",
    "    trials_1 = trials.loc[group_1, 'user_id'] \n",
    "    trials_2 = trials.loc[group_2, 'user_id'] \n",
    "    # пропорции всех и оставшихся на событии пользователей\n",
    "    p_1 = successes_1 / trials_1 \n",
    "    p_2 = successes_2 / trials_2 \n",
    "    # разница пропорций\n",
    "    difference = p_1 - p_2\n",
    "    # пропорция успехов в комбинированном датасете:\n",
    "    p_combined = (successes_1 + successes_2) / (trials_1 + trials_2) \n",
    "    # расчет статистики в стандартных отклонениях нормального распределения\n",
    "    z_value = difference / mt.sqrt(p_combined * (1 - p_combined) * (1 / trials_1 + 1 / trials_2))\n",
    "    # стандартное нормальное распределение (среднее 0, ст.отклонение 1)\n",
    "    distr = st.norm(0, 1)\n",
    "    # уровень значимости\n",
    "    p_value = (1 - distr.cdf(abs(z_value))) * 2\n",
    "    print('Проверка для  {} и {}, событие: {}, p-значение: {p_value:.2f}'.format(group_1, group_2, event_name, p_value=p_value))\n",
    "    if (p_value < alpha):\n",
    "        print(\"Отвергаем нулевую гипотезу: между долями есть значимая разница.\")\n",
    "    else:\n",
    "        print(\"Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Проверка для 246 и 247 контрольных групп\n",
    "Сформулируем статистические гипотезы:\n",
    "\n",
    "**H0** — доли групп равны.\n",
    "\n",
    "**H1** — доли групп отличаются.\n",
    "\n",
    "В качестве критического уровня значимости, мы выбираем 0,05 потому, что несмотря на большие размеры долей выборок, у нас будет большое количество проверок (16), что увеличит вероятность ошибки первого рода.\n",
    "\n",
    "Используем цикл, чтобы провести сравнения по всем событиям в таблице `successes`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Проверка для  246 и 247, событие: CartScreenAppear, p-значение: 0.23\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246 и 247, событие: MainScreenAppear, p-значение: 0.76\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246 и 247, событие: OffersScreenAppear, p-значение: 0.25\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246 и 247, событие: PaymentScreenSuccessful, p-значение: 0.11\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for event_name in successes.index:\n",
    "    z_test(246, 247, event_name, 0.05)\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**\n",
    "\n",
    "Контрольные группы 246 и 247 по всем событиям показали **отсутствие статистических различий**. Это означает, что система А/А-тестирования собрала данные **корректно**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Проверка для 246 и 248 групп\n",
    "Сформулируем статистические гипотезы:\n",
    "\n",
    "**H0** — доли групп равны.\n",
    "\n",
    "**H1** — доли групп отличаются."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Проверка для  246 и 248, событие: CartScreenAppear, p-значение: 0.08\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246 и 248, событие: MainScreenAppear, p-значение: 0.29\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246 и 248, событие: OffersScreenAppear, p-значение: 0.21\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246 и 248, событие: PaymentScreenSuccessful, p-значение: 0.21\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for event_name in successes.index:\n",
    "    z_test(246, 248, event_name, 0.05)\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**\n",
    "\n",
    "Контрольная группа 246 и экспериментальная (с измененным шрифтом) группа 248 по всем событиям показали **отсутствие статистических различий**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Проверка для 247 и 248 групп\n",
    "Сформулируем статистические гипотезы:\n",
    "\n",
    "**H0** — доли групп равны.\n",
    "\n",
    "**H1** — доли групп отличаются."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Проверка для  247 и 248, событие: CartScreenAppear, p-значение: 0.58\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  247 и 248, событие: MainScreenAppear, p-значение: 0.46\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  247 и 248, событие: OffersScreenAppear, p-значение: 0.92\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  247 и 248, событие: PaymentScreenSuccessful, p-значение: 0.74\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for event_name in successes.index:\n",
    "    z_test(247, 248, event_name, 0.05)\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**\n",
    "\n",
    "Контрольная группа 247 и экспериментальная (с измененным шрифтом) группа 248 по всем событиям показали **отсутствие статистических различий**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Проверка для объединенных 246 и 247 групп, и 248 группы\n",
    "Сформулируем статистические гипотезы:\n",
    "\n",
    "**H0** — доли групп равны.\n",
    "\n",
    "**H1** — доли групп отличаются."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Проверка для  246+247 и 248, событие: CartScreenAppear, p-значение: 0.18\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246+247 и 248, событие: MainScreenAppear, p-значение: 0.29\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246+247 и 248, событие: OffersScreenAppear, p-значение: 0.43\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n",
      "Проверка для  246+247 и 248, событие: PaymentScreenSuccessful, p-значение: 0.60\n",
      "Не получилось отвергнуть нулевую гипотезу, нет оснований считать доли разными.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for event_name in successes.index:\n",
    "    z_test('246+247', 248, event_name, 0.05)\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Вывод**\n",
    "\n",
    "Объединенные контрольные группы 246 и 247, и экспериментальная (с измененным шрифтом) группа 248 по всем событиям показали **отсутствие статистических различий**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Общие выводы\n",
    "### Результаты исследования\n",
    "\n",
    "1. Были исследованы данные с информацией по событиям в мобильном приложении по продаже продуктов питания с 1 по 7 августа 2019 года. Данные были собраны в процессе проведения А/А/В-теста. Всего 7534 уникальных пользователя, равномерно разбитых на группы: 246 и 247 - контрольные, 248 - экспериментальная (с измененным шрифтом).\n",
    "2. Изучение воронки событий показало **наличие у пользователей сложностей** в переходе от 1 шага покупки товара - `открытие главного экрана` на 2 шаг - `выбор товара`. Только 62% пользователей переходят к этому разделу приложения.\n",
    "3. Это также подтверждает значительный **перекос** в частоте встречаемости событий в логах. Событие `открытие главного экрана` встречается более, чем в 2,5 раза чаще, чем событие `выбор товара`.\n",
    "4. Наименьшую частоту встречаемости имеет событие `руководство пользователя`, что вполне закономерно - не так много людей любят изучать инструкции. Также это может указывать на то, что приложение имеет высокий уровень *юзабилит*и и пользователи не испытывают потребности в инструкции по приложению.\n",
    "5. Остальные этапы приобретения товара показывают умеренные потери пользователей: 3 шаг `открытие корзины` - 19%, 4 шаг `подтверждение покупки` - 5%.\n",
    "6. Анализ воронки событий в разрезе групп показал **отсутствие существенных различий** между группами A/A/B-теста.\n",
    "7. Контрольные группы 246 и 247 по всем событиям показали **отсутствие статистических различий**. Это означает, что система А/А/В-тестирования собрала данные **корректно**.\n",
    "8. Контрольные группы 246 и 247 по отдельности и вместе, и экспериментальная (с измененным шрифтом) группа 248 по всем событиям показали **отсутствие статистических различий**. Это означает, что новый шрифт **не оказал** статистически значимого эффекта на поведение пользователей.\n",
    "### Рекомендации\n",
    "\n",
    "+ Выяснить, что может препятствовать пользователям переходить с главного экрана приложения на экран выбора товара;\n",
    "+ В случае необходимости, есть возможность вернуть прежний шрифт, это не окажет значимого эффекта на поведение пользователей."
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 371,
    "start_time": "2023-09-05T13:56:19.606Z"
   },
   {
    "duration": 71,
    "start_time": "2023-09-05T13:56:37.860Z"
   },
   {
    "duration": 964,
    "start_time": "2023-09-05T13:56:39.633Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-05T13:56:41.110Z"
   },
   {
    "duration": 191,
    "start_time": "2023-09-05T13:56:53.410Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-05T13:56:55.573Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-05T13:59:39.918Z"
   },
   {
    "duration": 168,
    "start_time": "2023-09-05T13:59:46.622Z"
   },
   {
    "duration": 186,
    "start_time": "2023-09-05T14:00:03.571Z"
   },
   {
    "duration": 166,
    "start_time": "2023-09-05T14:00:21.313Z"
   },
   {
    "duration": 215,
    "start_time": "2023-09-05T14:00:56.164Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-05T14:01:44.793Z"
   },
   {
    "duration": 204,
    "start_time": "2023-09-05T14:02:00.897Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-05T14:03:49.850Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-05T14:03:53.204Z"
   },
   {
    "duration": 167,
    "start_time": "2023-09-05T14:03:56.429Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-05T14:04:15.373Z"
   },
   {
    "duration": 169,
    "start_time": "2023-09-05T14:04:24.524Z"
   },
   {
    "duration": 431,
    "start_time": "2023-09-05T14:06:47.988Z"
   },
   {
    "duration": 191,
    "start_time": "2023-09-05T14:06:48.421Z"
   },
   {
    "duration": 16,
    "start_time": "2023-09-05T14:06:48.614Z"
   },
   {
    "duration": 200,
    "start_time": "2023-09-05T14:06:48.632Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-05T14:09:07.299Z"
   },
   {
    "duration": 58,
    "start_time": "2023-09-05T14:10:04.289Z"
   },
   {
    "duration": 60,
    "start_time": "2023-09-05T14:10:56.688Z"
   },
   {
    "duration": 57,
    "start_time": "2023-09-05T14:11:03.194Z"
   },
   {
    "duration": 56,
    "start_time": "2023-09-05T14:11:40.288Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-05T14:34:00.436Z"
   },
   {
    "duration": 1074,
    "start_time": "2023-09-05T14:36:48.444Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-05T14:36:59.720Z"
   },
   {
    "duration": 98,
    "start_time": "2023-09-05T15:04:41.323Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-05T15:06:09.490Z"
   },
   {
    "duration": 118,
    "start_time": "2023-09-05T15:06:24.740Z"
   },
   {
    "duration": 197,
    "start_time": "2023-09-05T15:09:15.358Z"
   },
   {
    "duration": 194,
    "start_time": "2023-09-05T15:09:32.297Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-05T15:10:09.250Z"
   },
   {
    "duration": 108,
    "start_time": "2023-09-05T15:10:50.995Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-05T15:12:07.864Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-05T15:12:59.871Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-05T15:32:20.098Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-05T15:32:25.518Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-05T15:32:30.768Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-05T15:33:10.474Z"
   },
   {
    "duration": 84,
    "start_time": "2023-09-05T15:33:34.795Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-05T15:34:06.767Z"
   },
   {
    "duration": 1291,
    "start_time": "2023-09-05T15:40:29.191Z"
   },
   {
    "duration": 200,
    "start_time": "2023-09-05T15:40:30.484Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-05T15:40:30.686Z"
   },
   {
    "duration": 178,
    "start_time": "2023-09-05T15:40:30.693Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-05T15:40:30.873Z"
   },
   {
    "duration": 63,
    "start_time": "2023-09-05T15:40:30.882Z"
   },
   {
    "duration": 43,
    "start_time": "2023-09-05T15:40:30.947Z"
   },
   {
    "duration": 74,
    "start_time": "2023-09-05T15:40:30.992Z"
   },
   {
    "duration": 191,
    "start_time": "2023-09-05T15:44:36.407Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-05T15:49:07.570Z"
   },
   {
    "duration": 1399,
    "start_time": "2023-09-05T15:50:12.572Z"
   },
   {
    "duration": 196,
    "start_time": "2023-09-05T15:50:13.974Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-05T15:50:14.172Z"
   },
   {
    "duration": 153,
    "start_time": "2023-09-05T15:50:14.178Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-05T15:50:14.333Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-05T15:50:14.358Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-05T15:50:14.390Z"
   },
   {
    "duration": 55,
    "start_time": "2023-09-05T15:50:14.425Z"
   },
   {
    "duration": 223,
    "start_time": "2023-09-05T15:50:14.482Z"
   },
   {
    "duration": 62,
    "start_time": "2023-09-06T07:26:17.940Z"
   },
   {
    "duration": 1720,
    "start_time": "2023-09-06T07:26:26.338Z"
   },
   {
    "duration": 685,
    "start_time": "2023-09-06T07:26:28.060Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-06T07:26:28.747Z"
   },
   {
    "duration": 193,
    "start_time": "2023-09-06T07:26:28.752Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-06T07:26:28.947Z"
   },
   {
    "duration": 49,
    "start_time": "2023-09-06T07:26:28.956Z"
   },
   {
    "duration": 32,
    "start_time": "2023-09-06T07:26:29.011Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-06T07:26:29.045Z"
   },
   {
    "duration": 245,
    "start_time": "2023-09-06T07:26:29.085Z"
   },
   {
    "duration": 1266,
    "start_time": "2023-09-06T07:26:29.332Z"
   },
   {
    "duration": 1221,
    "start_time": "2023-09-06T07:26:51.280Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-06T13:09:33.225Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-06T13:09:52.129Z"
   },
   {
    "duration": 14,
    "start_time": "2023-09-06T13:09:56.078Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-06T13:10:12.022Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-06T13:12:39.057Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-06T13:12:59.079Z"
   },
   {
    "duration": 69,
    "start_time": "2023-09-06T13:13:36.832Z"
   },
   {
    "duration": 118,
    "start_time": "2023-09-06T13:17:13.922Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-06T13:17:20.945Z"
   },
   {
    "duration": 16,
    "start_time": "2023-09-06T13:17:25.757Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-06T13:17:39.583Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-06T13:17:47.618Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-06T13:18:09.584Z"
   },
   {
    "duration": 16,
    "start_time": "2023-09-06T13:18:17.025Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-06T13:18:19.313Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-06T13:18:26.222Z"
   },
   {
    "duration": 1320,
    "start_time": "2023-09-06T13:18:32.808Z"
   },
   {
    "duration": 195,
    "start_time": "2023-09-06T13:18:34.131Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-06T13:18:34.328Z"
   },
   {
    "duration": 153,
    "start_time": "2023-09-06T13:18:34.334Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T13:18:34.493Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-06T13:18:34.501Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-06T13:18:34.532Z"
   },
   {
    "duration": 45,
    "start_time": "2023-09-06T13:18:34.562Z"
   },
   {
    "duration": 201,
    "start_time": "2023-09-06T13:18:34.608Z"
   },
   {
    "duration": 1086,
    "start_time": "2023-09-06T13:18:34.812Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T13:18:35.900Z"
   },
   {
    "duration": 34,
    "start_time": "2023-09-06T13:18:35.908Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-06T13:18:35.944Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-06T13:18:35.985Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-06T13:18:47.602Z"
   },
   {
    "duration": 114,
    "start_time": "2023-09-06T13:18:56.452Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-06T13:19:11.911Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-06T13:19:18.631Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-06T13:19:51.060Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-06T13:19:55.026Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-06T13:20:30.439Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-06T13:20:37.755Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-06T13:21:01.299Z"
   },
   {
    "duration": 1481,
    "start_time": "2023-09-06T14:02:44.209Z"
   },
   {
    "duration": 227,
    "start_time": "2023-09-06T14:02:45.692Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-06T14:02:45.920Z"
   },
   {
    "duration": 208,
    "start_time": "2023-09-06T14:02:45.927Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-06T14:02:46.138Z"
   },
   {
    "duration": 72,
    "start_time": "2023-09-06T14:02:46.149Z"
   },
   {
    "duration": 47,
    "start_time": "2023-09-06T14:02:46.223Z"
   },
   {
    "duration": 45,
    "start_time": "2023-09-06T14:02:46.288Z"
   },
   {
    "duration": 266,
    "start_time": "2023-09-06T14:02:46.340Z"
   },
   {
    "duration": 1411,
    "start_time": "2023-09-06T14:02:46.611Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T14:02:48.029Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-06T14:02:48.037Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-06T14:02:48.072Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-06T14:02:48.108Z"
   },
   {
    "duration": 249,
    "start_time": "2023-09-06T14:02:48.127Z"
   },
   {
    "duration": 15,
    "start_time": "2023-09-06T14:03:11.904Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-06T14:04:28.229Z"
   },
   {
    "duration": 106,
    "start_time": "2023-09-06T14:05:20.756Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-06T14:05:34.323Z"
   },
   {
    "duration": 340,
    "start_time": "2023-09-06T14:06:08.585Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-06T14:06:56.606Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-06T14:07:40.256Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-06T14:08:30.810Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-06T14:08:45.107Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-06T14:08:49.643Z"
   },
   {
    "duration": 52,
    "start_time": "2023-09-06T14:11:29.668Z"
   },
   {
    "duration": 121,
    "start_time": "2023-09-06T14:14:27.045Z"
   },
   {
    "duration": 26,
    "start_time": "2023-09-06T14:15:43.012Z"
   },
   {
    "duration": 654,
    "start_time": "2023-09-06T14:16:29.082Z"
   },
   {
    "duration": 41,
    "start_time": "2023-09-06T14:18:39.012Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-06T14:20:13.041Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-06T14:20:22.979Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-06T14:20:23.551Z"
   },
   {
    "duration": 164,
    "start_time": "2023-09-06T14:20:24.330Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-06T14:21:18.724Z"
   },
   {
    "duration": 56,
    "start_time": "2023-09-06T14:21:30.516Z"
   },
   {
    "duration": 53,
    "start_time": "2023-09-06T14:22:09.509Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-06T14:27:06.016Z"
   },
   {
    "duration": 101,
    "start_time": "2023-09-06T14:30:06.130Z"
   },
   {
    "duration": 618,
    "start_time": "2023-09-06T14:30:46.927Z"
   },
   {
    "duration": 102,
    "start_time": "2023-09-06T14:30:54.680Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T14:32:38.125Z"
   },
   {
    "duration": 135,
    "start_time": "2023-09-06T14:32:49.939Z"
   },
   {
    "duration": 59,
    "start_time": "2023-09-06T14:35:03.909Z"
   },
   {
    "duration": 44,
    "start_time": "2023-09-06T14:36:56.531Z"
   },
   {
    "duration": 35,
    "start_time": "2023-09-06T14:39:16.805Z"
   },
   {
    "duration": 34,
    "start_time": "2023-09-06T14:39:38.506Z"
   },
   {
    "duration": 37,
    "start_time": "2023-09-06T14:40:07.437Z"
   },
   {
    "duration": 45,
    "start_time": "2023-09-06T14:40:19.318Z"
   },
   {
    "duration": 48,
    "start_time": "2023-09-06T14:41:01.881Z"
   },
   {
    "duration": 35,
    "start_time": "2023-09-06T14:41:25.516Z"
   },
   {
    "duration": 36,
    "start_time": "2023-09-06T14:42:01.230Z"
   },
   {
    "duration": 60,
    "start_time": "2023-09-06T14:46:30.849Z"
   },
   {
    "duration": 207,
    "start_time": "2023-09-06T14:46:45.672Z"
   },
   {
    "duration": 41,
    "start_time": "2023-09-06T14:47:01.127Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-06T14:48:06.445Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-06T14:48:17.228Z"
   },
   {
    "duration": 51,
    "start_time": "2023-09-06T14:48:24.473Z"
   },
   {
    "duration": 90,
    "start_time": "2023-09-06T14:48:44.217Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-06T14:49:26.404Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-06T14:51:01.295Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-06T14:52:12.648Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-06T14:53:46.070Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-06T14:54:49.924Z"
   },
   {
    "duration": 1435,
    "start_time": "2023-09-06T14:57:53.664Z"
   },
   {
    "duration": 234,
    "start_time": "2023-09-06T14:57:55.114Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-06T14:57:55.352Z"
   },
   {
    "duration": 200,
    "start_time": "2023-09-06T14:57:55.359Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T14:57:55.560Z"
   },
   {
    "duration": 72,
    "start_time": "2023-09-06T14:57:55.568Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-06T14:57:55.642Z"
   },
   {
    "duration": 39,
    "start_time": "2023-09-06T14:57:55.673Z"
   },
   {
    "duration": 240,
    "start_time": "2023-09-06T14:57:55.716Z"
   },
   {
    "duration": 1388,
    "start_time": "2023-09-06T14:57:55.957Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-06T14:57:57.348Z"
   },
   {
    "duration": 116,
    "start_time": "2023-09-06T14:57:57.358Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-06T14:57:57.478Z"
   },
   {
    "duration": 37,
    "start_time": "2023-09-06T14:57:57.510Z"
   },
   {
    "duration": 230,
    "start_time": "2023-09-06T14:57:57.549Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-06T14:57:57.780Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T14:57:57.802Z"
   },
   {
    "duration": 396,
    "start_time": "2023-09-06T14:57:57.810Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-06T14:57:58.209Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-06T14:57:58.241Z"
   },
   {
    "duration": 62,
    "start_time": "2023-09-06T14:57:58.266Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-06T14:57:58.330Z"
   },
   {
    "duration": 119,
    "start_time": "2023-09-06T14:57:58.360Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-06T14:57:58.480Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-06T14:57:58.494Z"
   },
   {
    "duration": 480,
    "start_time": "2023-09-06T14:57:58.523Z"
   },
   {
    "duration": 199,
    "start_time": "2023-09-06T14:57:59.008Z"
   },
   {
    "duration": 536,
    "start_time": "2023-09-06T14:57:59.209Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-06T14:57:59.747Z"
   },
   {
    "duration": 157,
    "start_time": "2023-09-06T14:57:59.754Z"
   },
   {
    "duration": 44,
    "start_time": "2023-09-06T14:57:59.913Z"
   },
   {
    "duration": 62,
    "start_time": "2023-09-06T14:57:59.959Z"
   },
   {
    "duration": 107,
    "start_time": "2023-09-06T14:58:00.023Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-06T14:58:00.132Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-06T14:58:00.142Z"
   },
   {
    "duration": 35,
    "start_time": "2023-09-06T14:58:00.188Z"
   },
   {
    "duration": 32,
    "start_time": "2023-09-06T14:58:00.227Z"
   },
   {
    "duration": 57,
    "start_time": "2023-09-06T14:58:00.261Z"
   },
   {
    "duration": 258,
    "start_time": "2023-09-06T15:13:23.664Z"
   },
   {
    "duration": 69,
    "start_time": "2023-09-06T15:13:28.775Z"
   },
   {
    "duration": 87,
    "start_time": "2023-09-06T15:14:31.403Z"
   },
   {
    "duration": 111,
    "start_time": "2023-09-06T15:15:01.224Z"
   },
   {
    "duration": 83,
    "start_time": "2023-09-06T15:15:04.010Z"
   },
   {
    "duration": 101,
    "start_time": "2023-09-06T15:15:09.291Z"
   },
   {
    "duration": 89,
    "start_time": "2023-09-06T15:23:48.963Z"
   },
   {
    "duration": 115,
    "start_time": "2023-09-06T15:24:10.650Z"
   },
   {
    "duration": 103,
    "start_time": "2023-09-06T15:24:44.220Z"
   },
   {
    "duration": 92,
    "start_time": "2023-09-06T15:25:00.754Z"
   },
   {
    "duration": 107,
    "start_time": "2023-09-06T15:25:18.109Z"
   },
   {
    "duration": 104,
    "start_time": "2023-09-06T15:25:33.740Z"
   },
   {
    "duration": 107,
    "start_time": "2023-09-06T15:26:59.333Z"
   },
   {
    "duration": 85,
    "start_time": "2023-09-06T15:27:13.128Z"
   },
   {
    "duration": 112,
    "start_time": "2023-09-06T15:27:34.627Z"
   },
   {
    "duration": 108,
    "start_time": "2023-09-06T15:27:43.071Z"
   },
   {
    "duration": 98,
    "start_time": "2023-09-06T15:28:02.125Z"
   },
   {
    "duration": 118,
    "start_time": "2023-09-06T15:28:22.301Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-06T15:30:27.921Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-06T15:30:51.618Z"
   },
   {
    "duration": 47,
    "start_time": "2023-09-06T15:30:58.058Z"
   },
   {
    "duration": 35,
    "start_time": "2023-09-06T15:31:13.802Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-06T15:31:29.857Z"
   },
   {
    "duration": 44,
    "start_time": "2023-09-06T15:35:28.313Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-06T15:35:50.021Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-06T15:36:59.862Z"
   },
   {
    "duration": 40,
    "start_time": "2023-09-06T15:37:03.802Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-06T15:37:19.540Z"
   },
   {
    "duration": 46,
    "start_time": "2023-09-06T15:37:26.783Z"
   },
   {
    "duration": 39,
    "start_time": "2023-09-06T15:37:32.428Z"
   },
   {
    "duration": 50,
    "start_time": "2023-09-06T15:37:53.509Z"
   },
   {
    "duration": 38,
    "start_time": "2023-09-06T15:38:21.357Z"
   },
   {
    "duration": 36,
    "start_time": "2023-09-06T15:38:48.406Z"
   },
   {
    "duration": 1381,
    "start_time": "2023-09-06T15:40:21.571Z"
   },
   {
    "duration": 270,
    "start_time": "2023-09-06T15:40:22.955Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-06T15:40:23.228Z"
   },
   {
    "duration": 197,
    "start_time": "2023-09-06T15:40:23.234Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T15:40:23.433Z"
   },
   {
    "duration": 56,
    "start_time": "2023-09-06T15:40:23.440Z"
   },
   {
    "duration": 45,
    "start_time": "2023-09-06T15:40:23.498Z"
   },
   {
    "duration": 32,
    "start_time": "2023-09-06T15:40:23.545Z"
   },
   {
    "duration": 264,
    "start_time": "2023-09-06T15:40:23.579Z"
   },
   {
    "duration": 1141,
    "start_time": "2023-09-06T15:40:23.845Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T15:40:24.989Z"
   },
   {
    "duration": 41,
    "start_time": "2023-09-06T15:40:24.997Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-06T15:40:25.039Z"
   },
   {
    "duration": 36,
    "start_time": "2023-09-06T15:40:25.052Z"
   },
   {
    "duration": 235,
    "start_time": "2023-09-06T15:40:25.089Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-06T15:40:25.326Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-06T15:40:25.335Z"
   },
   {
    "duration": 329,
    "start_time": "2023-09-06T15:40:25.343Z"
   },
   {
    "duration": 47,
    "start_time": "2023-09-06T15:40:25.673Z"
   },
   {
    "duration": 23,
    "start_time": "2023-09-06T15:40:25.722Z"
   },
   {
    "duration": 71,
    "start_time": "2023-09-06T15:40:25.747Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-06T15:40:25.822Z"
   },
   {
    "duration": 97,
    "start_time": "2023-09-06T15:40:25.853Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-06T15:40:25.952Z"
   },
   {
    "duration": 96,
    "start_time": "2023-09-06T15:40:25.956Z"
   },
   {
    "duration": 484,
    "start_time": "2023-09-06T15:40:26.053Z"
   },
   {
    "duration": 165,
    "start_time": "2023-09-06T15:40:26.538Z"
   },
   {
    "duration": 575,
    "start_time": "2023-09-06T15:40:26.713Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-06T15:40:27.290Z"
   },
   {
    "duration": 206,
    "start_time": "2023-09-06T15:40:27.302Z"
   },
   {
    "duration": 48,
    "start_time": "2023-09-06T15:40:27.515Z"
   },
   {
    "duration": 58,
    "start_time": "2023-09-06T15:40:27.565Z"
   },
   {
    "duration": 114,
    "start_time": "2023-09-06T15:40:27.626Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-06T15:40:27.742Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-06T15:40:27.748Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-06T15:40:27.763Z"
   },
   {
    "duration": 26,
    "start_time": "2023-09-06T15:40:27.790Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-06T15:40:27.818Z"
   },
   {
    "duration": 1463,
    "start_time": "2023-09-07T09:29:10.783Z"
   },
   {
    "duration": 694,
    "start_time": "2023-09-07T09:29:12.248Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-07T09:29:12.943Z"
   },
   {
    "duration": 123,
    "start_time": "2023-09-07T09:29:12.949Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-07T09:29:13.073Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T09:29:13.080Z"
   },
   {
    "duration": 49,
    "start_time": "2023-09-07T09:29:13.109Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-07T09:29:13.160Z"
   },
   {
    "duration": 182,
    "start_time": "2023-09-07T09:29:13.181Z"
   },
   {
    "duration": 977,
    "start_time": "2023-09-07T09:29:13.365Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T09:29:14.344Z"
   },
   {
    "duration": 35,
    "start_time": "2023-09-07T09:29:14.350Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-07T09:29:14.386Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-07T09:29:14.396Z"
   },
   {
    "duration": 185,
    "start_time": "2023-09-07T09:29:14.417Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-07T09:29:14.604Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T09:29:14.614Z"
   },
   {
    "duration": 291,
    "start_time": "2023-09-07T09:29:14.628Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T09:29:14.921Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-07T09:29:14.953Z"
   },
   {
    "duration": 140,
    "start_time": "2023-09-07T09:29:14.982Z"
   },
   {
    "duration": 140,
    "start_time": "2023-09-07T09:29:15.124Z"
   },
   {
    "duration": 83,
    "start_time": "2023-09-07T09:29:15.266Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-07T09:29:15.351Z"
   },
   {
    "duration": 14,
    "start_time": "2023-09-07T09:29:15.356Z"
   },
   {
    "duration": 603,
    "start_time": "2023-09-07T09:29:15.372Z"
   },
   {
    "duration": 173,
    "start_time": "2023-09-07T09:29:15.977Z"
   },
   {
    "duration": 457,
    "start_time": "2023-09-07T09:29:16.153Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-07T09:29:16.612Z"
   },
   {
    "duration": 138,
    "start_time": "2023-09-07T09:29:16.618Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T09:29:16.758Z"
   },
   {
    "duration": 36,
    "start_time": "2023-09-07T09:29:16.790Z"
   },
   {
    "duration": 88,
    "start_time": "2023-09-07T09:29:16.828Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T09:29:16.918Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-07T09:29:16.924Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T09:29:16.950Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-07T09:29:16.960Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-07T09:29:16.969Z"
   },
   {
    "duration": 1363,
    "start_time": "2023-09-07T15:18:43.307Z"
   },
   {
    "duration": 193,
    "start_time": "2023-09-07T15:18:44.672Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T15:18:44.866Z"
   },
   {
    "duration": 135,
    "start_time": "2023-09-07T15:18:44.874Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-07T15:18:45.011Z"
   },
   {
    "duration": 73,
    "start_time": "2023-09-07T15:18:45.019Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T15:18:45.094Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-07T15:18:45.123Z"
   },
   {
    "duration": 176,
    "start_time": "2023-09-07T15:18:45.142Z"
   },
   {
    "duration": 942,
    "start_time": "2023-09-07T15:18:45.321Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T15:18:46.265Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-07T15:18:46.271Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T15:18:46.303Z"
   },
   {
    "duration": 36,
    "start_time": "2023-09-07T15:18:46.315Z"
   },
   {
    "duration": 175,
    "start_time": "2023-09-07T15:18:46.353Z"
   },
   {
    "duration": 15,
    "start_time": "2023-09-07T15:18:46.530Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T15:18:46.547Z"
   },
   {
    "duration": 300,
    "start_time": "2023-09-07T15:18:46.554Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-07T15:18:46.855Z"
   },
   {
    "duration": 23,
    "start_time": "2023-09-07T15:18:46.878Z"
   },
   {
    "duration": 51,
    "start_time": "2023-09-07T15:18:46.903Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-07T15:18:46.956Z"
   },
   {
    "duration": 99,
    "start_time": "2023-09-07T15:18:46.985Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-07T15:18:47.085Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-07T15:18:47.089Z"
   },
   {
    "duration": 495,
    "start_time": "2023-09-07T15:18:47.111Z"
   },
   {
    "duration": 85,
    "start_time": "2023-09-07T15:18:47.607Z"
   },
   {
    "duration": 435,
    "start_time": "2023-09-07T15:18:47.744Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T15:18:48.181Z"
   },
   {
    "duration": 151,
    "start_time": "2023-09-07T15:18:48.187Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T15:18:48.340Z"
   },
   {
    "duration": 37,
    "start_time": "2023-09-07T15:18:48.372Z"
   },
   {
    "duration": 101,
    "start_time": "2023-09-07T15:18:48.410Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T15:18:48.513Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-07T15:18:48.520Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T15:18:48.546Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-07T15:18:48.558Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T15:18:48.577Z"
   },
   {
    "duration": 1423,
    "start_time": "2023-09-07T20:52:28.518Z"
   },
   {
    "duration": 710,
    "start_time": "2023-09-07T20:52:29.945Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:52:30.656Z"
   },
   {
    "duration": 136,
    "start_time": "2023-09-07T20:52:30.662Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-07T20:52:30.800Z"
   },
   {
    "duration": 74,
    "start_time": "2023-09-07T20:52:30.809Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-07T20:52:30.885Z"
   },
   {
    "duration": 23,
    "start_time": "2023-09-07T20:52:30.920Z"
   },
   {
    "duration": 321,
    "start_time": "2023-09-07T20:52:30.945Z"
   },
   {
    "duration": 938,
    "start_time": "2023-09-07T20:52:31.268Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:52:32.207Z"
   },
   {
    "duration": 43,
    "start_time": "2023-09-07T20:52:32.214Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T20:52:32.258Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-07T20:52:32.273Z"
   },
   {
    "duration": 194,
    "start_time": "2023-09-07T20:52:32.291Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-07T20:52:32.488Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-07T20:52:32.498Z"
   },
   {
    "duration": 313,
    "start_time": "2023-09-07T20:52:32.506Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-07T20:52:32.820Z"
   },
   {
    "duration": 22,
    "start_time": "2023-09-07T20:52:32.853Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T20:52:32.876Z"
   },
   {
    "duration": 44,
    "start_time": "2023-09-07T20:52:32.908Z"
   },
   {
    "duration": 90,
    "start_time": "2023-09-07T20:52:32.954Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-07T20:52:33.046Z"
   },
   {
    "duration": 15,
    "start_time": "2023-09-07T20:52:33.051Z"
   },
   {
    "duration": 462,
    "start_time": "2023-09-07T20:52:33.067Z"
   },
   {
    "duration": 130,
    "start_time": "2023-09-07T20:52:33.531Z"
   },
   {
    "duration": 509,
    "start_time": "2023-09-07T20:52:33.663Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:52:34.175Z"
   },
   {
    "duration": 150,
    "start_time": "2023-09-07T20:52:34.183Z"
   },
   {
    "duration": 39,
    "start_time": "2023-09-07T20:52:34.335Z"
   },
   {
    "duration": 44,
    "start_time": "2023-09-07T20:52:34.376Z"
   },
   {
    "duration": 95,
    "start_time": "2023-09-07T20:52:34.422Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-07T20:52:34.518Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-07T20:52:34.526Z"
   },
   {
    "duration": 14,
    "start_time": "2023-09-07T20:52:34.552Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T20:52:34.568Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T20:52:34.579Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-07T20:52:51.537Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:53:13.538Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:53:19.012Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T20:53:30.916Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T20:53:54.752Z"
   },
   {
    "duration": 1370,
    "start_time": "2023-09-07T20:54:00.926Z"
   },
   {
    "duration": 217,
    "start_time": "2023-09-07T20:54:02.298Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:54:02.517Z"
   },
   {
    "duration": 154,
    "start_time": "2023-09-07T20:54:02.524Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-07T20:54:02.680Z"
   },
   {
    "duration": 39,
    "start_time": "2023-09-07T20:54:02.687Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-07T20:54:02.728Z"
   },
   {
    "duration": 22,
    "start_time": "2023-09-07T20:54:02.772Z"
   },
   {
    "duration": 213,
    "start_time": "2023-09-07T20:54:02.796Z"
   },
   {
    "duration": 1006,
    "start_time": "2023-09-07T20:54:03.021Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:54:04.029Z"
   },
   {
    "duration": 49,
    "start_time": "2023-09-07T20:54:04.036Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T20:54:04.087Z"
   },
   {
    "duration": 40,
    "start_time": "2023-09-07T20:54:04.105Z"
   },
   {
    "duration": 246,
    "start_time": "2023-09-07T20:54:04.148Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-07T20:54:04.396Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-07T20:54:04.405Z"
   },
   {
    "duration": 307,
    "start_time": "2023-09-07T20:54:04.411Z"
   },
   {
    "duration": 35,
    "start_time": "2023-09-07T20:54:04.719Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-07T20:54:04.757Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-07T20:54:04.783Z"
   },
   {
    "duration": 50,
    "start_time": "2023-09-07T20:54:04.816Z"
   },
   {
    "duration": 93,
    "start_time": "2023-09-07T20:54:04.868Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-07T20:54:04.963Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-07T20:54:04.968Z"
   },
   {
    "duration": 496,
    "start_time": "2023-09-07T20:54:05.001Z"
   },
   {
    "duration": 111,
    "start_time": "2023-09-07T20:54:05.499Z"
   },
   {
    "duration": 467,
    "start_time": "2023-09-07T20:54:05.644Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:54:06.113Z"
   },
   {
    "duration": 164,
    "start_time": "2023-09-07T20:54:06.120Z"
   },
   {
    "duration": 36,
    "start_time": "2023-09-07T20:54:06.286Z"
   },
   {
    "duration": 61,
    "start_time": "2023-09-07T20:54:06.324Z"
   },
   {
    "duration": 99,
    "start_time": "2023-09-07T20:54:06.387Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:54:06.488Z"
   },
   {
    "duration": 14,
    "start_time": "2023-09-07T20:54:06.495Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T20:54:06.511Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T20:54:06.523Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-07T20:54:06.556Z"
   },
   {
    "duration": 15,
    "start_time": "2023-09-07T20:54:37.611Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:54:48.115Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T20:54:54.470Z"
   },
   {
    "duration": 15,
    "start_time": "2023-09-07T20:54:58.824Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T20:55:29.498Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:55:37.317Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:55:47.730Z"
   },
   {
    "duration": 66,
    "start_time": "2023-09-07T20:56:01.722Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:56:22.111Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T20:56:29.554Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:56:46.491Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:56:50.470Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-07T20:57:06.963Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T20:57:12.646Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T20:57:28.508Z"
   },
   {
    "duration": 1369,
    "start_time": "2023-09-07T20:58:15.970Z"
   },
   {
    "duration": 199,
    "start_time": "2023-09-07T20:58:17.343Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-07T20:58:17.544Z"
   },
   {
    "duration": 147,
    "start_time": "2023-09-07T20:58:17.550Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-07T20:58:17.699Z"
   },
   {
    "duration": 48,
    "start_time": "2023-09-07T20:58:17.707Z"
   },
   {
    "duration": 32,
    "start_time": "2023-09-07T20:58:17.757Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-07T20:58:17.790Z"
   },
   {
    "duration": 226,
    "start_time": "2023-09-07T20:58:17.811Z"
   },
   {
    "duration": 1031,
    "start_time": "2023-09-07T20:58:18.044Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:58:19.076Z"
   },
   {
    "duration": 71,
    "start_time": "2023-09-07T20:58:19.083Z"
   },
   {
    "duration": 14,
    "start_time": "2023-09-07T20:58:19.156Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T20:58:19.174Z"
   },
   {
    "duration": 209,
    "start_time": "2023-09-07T20:58:19.184Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T20:58:19.395Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-07T20:58:19.406Z"
   },
   {
    "duration": 321,
    "start_time": "2023-09-07T20:58:19.439Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-07T20:58:19.762Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-07T20:58:19.788Z"
   },
   {
    "duration": 53,
    "start_time": "2023-09-07T20:58:19.815Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T20:58:19.870Z"
   },
   {
    "duration": 100,
    "start_time": "2023-09-07T20:58:19.902Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-07T20:58:20.004Z"
   },
   {
    "duration": 32,
    "start_time": "2023-09-07T20:58:20.008Z"
   },
   {
    "duration": 465,
    "start_time": "2023-09-07T20:58:20.043Z"
   },
   {
    "duration": 156,
    "start_time": "2023-09-07T20:58:20.510Z"
   },
   {
    "duration": 485,
    "start_time": "2023-09-07T20:58:20.668Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-07T20:58:21.155Z"
   },
   {
    "duration": 142,
    "start_time": "2023-09-07T20:58:21.162Z"
   },
   {
    "duration": 41,
    "start_time": "2023-09-07T20:58:21.306Z"
   },
   {
    "duration": 41,
    "start_time": "2023-09-07T20:58:21.349Z"
   },
   {
    "duration": 97,
    "start_time": "2023-09-07T20:58:21.392Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-07T20:58:21.491Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T20:58:21.499Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T20:58:21.513Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-07T20:58:21.523Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T20:58:21.551Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T20:59:03.910Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T20:59:16.310Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T20:59:36.808Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-07T21:00:03.972Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:00:07.234Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:00:12.258Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:00:16.446Z"
   },
   {
    "duration": 112,
    "start_time": "2023-09-07T21:00:58.040Z"
   },
   {
    "duration": 91,
    "start_time": "2023-09-07T21:01:08.459Z"
   },
   {
    "duration": 107,
    "start_time": "2023-09-07T21:01:11.306Z"
   },
   {
    "duration": 99,
    "start_time": "2023-09-07T21:01:19.413Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T21:02:21.236Z"
   },
   {
    "duration": 159,
    "start_time": "2023-09-07T21:02:33.147Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:02:40.112Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:02:48.039Z"
   },
   {
    "duration": 14,
    "start_time": "2023-09-07T21:03:01.260Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T21:03:07.168Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T21:03:19.567Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:04:24.921Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-07T21:07:25.459Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T21:07:29.105Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:07:43.160Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-07T21:07:48.444Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:07:51.736Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-07T21:07:57.116Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:08:01.681Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T21:08:05.401Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-07T21:08:09.405Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T21:08:30.675Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:08:38.452Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-07T21:09:21.813Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:09:40.426Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:10:21.441Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-07T21:10:39.393Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-07T21:10:44.743Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T21:28:14.914Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T21:28:20.927Z"
   },
   {
    "duration": 32,
    "start_time": "2023-09-07T21:28:29.482Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T21:28:33.512Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-07T21:28:44.357Z"
   },
   {
    "duration": 34,
    "start_time": "2023-09-07T21:28:47.871Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T21:29:02.670Z"
   },
   {
    "duration": 33,
    "start_time": "2023-09-07T21:29:44.555Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-07T21:29:57.465Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T21:30:05.814Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T21:30:29.972Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T21:31:38.452Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-07T21:31:50.737Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T21:32:05.136Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T21:32:23.164Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T21:32:33.601Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-07T21:33:28.906Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-07T21:33:31.897Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T21:33:38.316Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T21:34:00.133Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T21:34:29.433Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T21:34:42.101Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T21:34:51.300Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T21:35:09.663Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T21:35:29.801Z"
   },
   {
    "duration": 1208,
    "start_time": "2023-09-07T23:47:17.038Z"
   },
   {
    "duration": 177,
    "start_time": "2023-09-07T23:47:18.248Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-07T23:47:18.427Z"
   },
   {
    "duration": 129,
    "start_time": "2023-09-07T23:47:18.433Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-07T23:47:18.564Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-07T23:47:18.570Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-07T23:47:18.613Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-07T23:47:18.644Z"
   },
   {
    "duration": 188,
    "start_time": "2023-09-07T23:47:18.662Z"
   },
   {
    "duration": 969,
    "start_time": "2023-09-07T23:47:18.852Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-07T23:47:19.823Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-07T23:47:19.829Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-07T23:47:19.873Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-07T23:47:19.888Z"
   },
   {
    "duration": 205,
    "start_time": "2023-09-07T23:47:19.898Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-07T23:47:20.105Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-07T23:47:20.114Z"
   },
   {
    "duration": 277,
    "start_time": "2023-09-07T23:47:20.122Z"
   },
   {
    "duration": 22,
    "start_time": "2023-09-07T23:47:20.401Z"
   },
   {
    "duration": 36,
    "start_time": "2023-09-07T23:47:20.425Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-07T23:47:20.462Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-07T23:47:20.492Z"
   },
   {
    "duration": 85,
    "start_time": "2023-09-07T23:47:20.519Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-07T23:47:20.606Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-07T23:47:20.610Z"
   },
   {
    "duration": 136,
    "start_time": "2023-09-07T23:47:20.633Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.770Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.772Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.773Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.774Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.775Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.776Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.777Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.778Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.779Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.780Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.781Z"
   },
   {
    "duration": 0,
    "start_time": "2023-09-07T23:47:20.782Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-07T23:48:43.696Z"
   },
   {
    "duration": 455,
    "start_time": "2023-09-07T23:48:59.413Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-07T23:49:11.153Z"
   },
   {
    "duration": 63,
    "start_time": "2023-09-07T23:49:17.636Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-07T23:49:22.018Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T23:50:32.917Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-07T23:51:47.633Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-07T23:52:00.069Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T23:52:27.423Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T23:52:57.799Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-07T23:53:07.326Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T23:53:09.792Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-07T23:53:23.607Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T23:55:59.511Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-07T23:57:17.523Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-07T23:59:07.476Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:05:03.233Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-08T00:05:07.270Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-08T00:05:30.301Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:05:39.206Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-08T00:05:44.940Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-08T00:07:08.571Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:07:26.663Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-08T00:08:09.384Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:08:12.016Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:08:32.771Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T00:09:01.721Z"
   },
   {
    "duration": 20,
    "start_time": "2023-09-08T00:09:26.239Z"
   },
   {
    "duration": 36,
    "start_time": "2023-09-08T00:09:34.152Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-08T00:10:04.383Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:10:17.235Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-08T00:10:34.436Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T00:10:49.697Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-08T00:10:54.969Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T00:11:09.510Z"
   },
   {
    "duration": 1186,
    "start_time": "2023-09-08T00:12:28.069Z"
   },
   {
    "duration": 180,
    "start_time": "2023-09-08T00:12:29.257Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-08T00:12:29.439Z"
   },
   {
    "duration": 121,
    "start_time": "2023-09-08T00:12:29.444Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-08T00:12:29.567Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-08T00:12:29.574Z"
   },
   {
    "duration": 46,
    "start_time": "2023-09-08T00:12:29.605Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-08T00:12:29.652Z"
   },
   {
    "duration": 189,
    "start_time": "2023-09-08T00:12:29.672Z"
   },
   {
    "duration": 884,
    "start_time": "2023-09-08T00:12:29.863Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:12:30.749Z"
   },
   {
    "duration": 63,
    "start_time": "2023-09-08T00:12:30.754Z"
   },
   {
    "duration": 54,
    "start_time": "2023-09-08T00:12:30.819Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-08T00:12:30.877Z"
   },
   {
    "duration": 188,
    "start_time": "2023-09-08T00:12:30.902Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-08T00:12:31.092Z"
   },
   {
    "duration": 167,
    "start_time": "2023-09-08T00:12:31.102Z"
   },
   {
    "duration": 296,
    "start_time": "2023-09-08T00:12:31.271Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-08T00:12:31.569Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T00:12:31.594Z"
   },
   {
    "duration": 53,
    "start_time": "2023-09-08T00:12:31.625Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-08T00:12:31.680Z"
   },
   {
    "duration": 109,
    "start_time": "2023-09-08T00:12:31.707Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-08T00:12:31.817Z"
   },
   {
    "duration": 47,
    "start_time": "2023-09-08T00:12:31.821Z"
   },
   {
    "duration": 416,
    "start_time": "2023-09-08T00:12:31.870Z"
   },
   {
    "duration": 105,
    "start_time": "2023-09-08T00:12:32.288Z"
   },
   {
    "duration": 476,
    "start_time": "2023-09-08T00:12:32.395Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:12:32.873Z"
   },
   {
    "duration": 119,
    "start_time": "2023-09-08T00:12:32.879Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-08T00:12:33.000Z"
   },
   {
    "duration": 44,
    "start_time": "2023-09-08T00:12:33.032Z"
   },
   {
    "duration": 89,
    "start_time": "2023-09-08T00:12:33.077Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:12:33.168Z"
   },
   {
    "duration": 38,
    "start_time": "2023-09-08T00:12:33.175Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-08T00:12:33.215Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-08T00:12:33.242Z"
   },
   {
    "duration": 10,
    "start_time": "2023-09-08T00:12:33.251Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:15:31.295Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T00:15:43.353Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T00:15:54.797Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-08T00:16:06.443Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-08T00:16:29.770Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-08T00:17:12.421Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:18:45.174Z"
   },
   {
    "duration": 288,
    "start_time": "2023-09-08T00:18:51.009Z"
   },
   {
    "duration": 160,
    "start_time": "2023-09-08T00:18:55.777Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:19:06.060Z"
   },
   {
    "duration": 68,
    "start_time": "2023-09-08T00:19:09.430Z"
   },
   {
    "duration": 1205,
    "start_time": "2023-09-08T00:19:16.441Z"
   },
   {
    "duration": 178,
    "start_time": "2023-09-08T00:19:17.648Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:19:17.827Z"
   },
   {
    "duration": 133,
    "start_time": "2023-09-08T00:19:17.833Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:19:17.968Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:19:17.974Z"
   },
   {
    "duration": 47,
    "start_time": "2023-09-08T00:19:18.004Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-08T00:19:18.052Z"
   },
   {
    "duration": 197,
    "start_time": "2023-09-08T00:19:18.073Z"
   },
   {
    "duration": 888,
    "start_time": "2023-09-08T00:19:18.272Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:19:19.162Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-08T00:19:19.167Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-08T00:19:19.199Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-08T00:19:19.209Z"
   },
   {
    "duration": 173,
    "start_time": "2023-09-08T00:19:19.243Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-08T00:19:19.417Z"
   },
   {
    "duration": 23,
    "start_time": "2023-09-08T00:19:19.427Z"
   },
   {
    "duration": 297,
    "start_time": "2023-09-08T00:19:19.451Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-08T00:19:19.749Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-08T00:19:19.775Z"
   },
   {
    "duration": 56,
    "start_time": "2023-09-08T00:19:19.800Z"
   },
   {
    "duration": 45,
    "start_time": "2023-09-08T00:19:19.857Z"
   },
   {
    "duration": 96,
    "start_time": "2023-09-08T00:19:19.904Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-08T00:19:20.001Z"
   },
   {
    "duration": 37,
    "start_time": "2023-09-08T00:19:20.006Z"
   },
   {
    "duration": 418,
    "start_time": "2023-09-08T00:19:20.045Z"
   },
   {
    "duration": 126,
    "start_time": "2023-09-08T00:19:20.464Z"
   },
   {
    "duration": 471,
    "start_time": "2023-09-08T00:19:20.593Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:19:21.066Z"
   },
   {
    "duration": 123,
    "start_time": "2023-09-08T00:19:21.073Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-08T00:19:21.198Z"
   },
   {
    "duration": 50,
    "start_time": "2023-09-08T00:19:21.230Z"
   },
   {
    "duration": 88,
    "start_time": "2023-09-08T00:19:21.282Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:19:21.372Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-08T00:19:21.378Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-08T00:19:21.406Z"
   },
   {
    "duration": 23,
    "start_time": "2023-09-08T00:19:21.428Z"
   },
   {
    "duration": 15,
    "start_time": "2023-09-08T00:19:21.452Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:19:47.741Z"
   },
   {
    "duration": 1223,
    "start_time": "2023-09-08T00:19:53.610Z"
   },
   {
    "duration": 176,
    "start_time": "2023-09-08T00:19:54.835Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:19:55.013Z"
   },
   {
    "duration": 137,
    "start_time": "2023-09-08T00:19:55.019Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-08T00:19:55.157Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-08T00:19:55.165Z"
   },
   {
    "duration": 53,
    "start_time": "2023-09-08T00:19:55.191Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-08T00:19:55.246Z"
   },
   {
    "duration": 185,
    "start_time": "2023-09-08T00:19:55.265Z"
   },
   {
    "duration": 876,
    "start_time": "2023-09-08T00:19:55.452Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-08T00:19:56.329Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-08T00:19:56.344Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-08T00:19:56.375Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-08T00:19:56.388Z"
   },
   {
    "duration": 197,
    "start_time": "2023-09-08T00:19:56.398Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-08T00:19:56.597Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:19:56.606Z"
   },
   {
    "duration": 285,
    "start_time": "2023-09-08T00:19:56.612Z"
   },
   {
    "duration": 22,
    "start_time": "2023-09-08T00:19:56.898Z"
   },
   {
    "duration": 39,
    "start_time": "2023-09-08T00:19:56.922Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-08T00:19:56.963Z"
   },
   {
    "duration": 25,
    "start_time": "2023-09-08T00:19:56.996Z"
   },
   {
    "duration": 71,
    "start_time": "2023-09-08T00:19:57.044Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-08T00:19:57.116Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T00:19:57.120Z"
   },
   {
    "duration": 377,
    "start_time": "2023-09-08T00:19:57.150Z"
   },
   {
    "duration": 135,
    "start_time": "2023-09-08T00:19:57.528Z"
   },
   {
    "duration": 422,
    "start_time": "2023-09-08T00:19:57.664Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:19:58.088Z"
   },
   {
    "duration": 118,
    "start_time": "2023-09-08T00:19:58.094Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-08T00:19:58.214Z"
   },
   {
    "duration": 37,
    "start_time": "2023-09-08T00:19:58.257Z"
   },
   {
    "duration": 85,
    "start_time": "2023-09-08T00:19:58.296Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:19:58.382Z"
   },
   {
    "duration": 14,
    "start_time": "2023-09-08T00:19:58.388Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-08T00:19:58.403Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-08T00:19:58.421Z"
   },
   {
    "duration": 15,
    "start_time": "2023-09-08T00:19:58.433Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-08T00:25:05.959Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:25:26.072Z"
   },
   {
    "duration": 1181,
    "start_time": "2023-09-08T00:25:30.969Z"
   },
   {
    "duration": 182,
    "start_time": "2023-09-08T00:25:32.151Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:25:32.334Z"
   },
   {
    "duration": 130,
    "start_time": "2023-09-08T00:25:32.339Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:25:32.471Z"
   },
   {
    "duration": 32,
    "start_time": "2023-09-08T00:25:32.478Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-08T00:25:32.512Z"
   },
   {
    "duration": 18,
    "start_time": "2023-09-08T00:25:32.556Z"
   },
   {
    "duration": 189,
    "start_time": "2023-09-08T00:25:32.575Z"
   },
   {
    "duration": 921,
    "start_time": "2023-09-08T00:25:32.766Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:25:33.688Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-08T00:25:33.693Z"
   },
   {
    "duration": 23,
    "start_time": "2023-09-08T00:25:33.722Z"
   },
   {
    "duration": 178,
    "start_time": "2023-09-08T00:25:33.748Z"
   },
   {
    "duration": 181,
    "start_time": "2023-09-08T00:25:33.927Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-08T00:25:34.110Z"
   },
   {
    "duration": 74,
    "start_time": "2023-09-08T00:25:34.122Z"
   },
   {
    "duration": 323,
    "start_time": "2023-09-08T00:25:34.198Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T00:25:34.523Z"
   },
   {
    "duration": 21,
    "start_time": "2023-09-08T00:25:34.553Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-08T00:25:34.576Z"
   },
   {
    "duration": 47,
    "start_time": "2023-09-08T00:25:34.605Z"
   },
   {
    "duration": 70,
    "start_time": "2023-09-08T00:25:34.653Z"
   },
   {
    "duration": 3,
    "start_time": "2023-09-08T00:25:34.724Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-08T00:25:34.728Z"
   },
   {
    "duration": 310,
    "start_time": "2023-09-08T00:25:34.753Z"
   },
   {
    "duration": 113,
    "start_time": "2023-09-08T00:25:35.065Z"
   },
   {
    "duration": 442,
    "start_time": "2023-09-08T00:25:35.180Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T00:25:35.623Z"
   },
   {
    "duration": 160,
    "start_time": "2023-09-08T00:25:35.630Z"
   },
   {
    "duration": 111,
    "start_time": "2023-09-08T00:25:35.791Z"
   },
   {
    "duration": 49,
    "start_time": "2023-09-08T00:25:35.903Z"
   },
   {
    "duration": 76,
    "start_time": "2023-09-08T00:25:35.954Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-08T00:25:36.043Z"
   },
   {
    "duration": 13,
    "start_time": "2023-09-08T00:25:36.051Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-08T00:25:36.065Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-08T00:25:36.075Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-08T00:25:36.095Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:27:03.917Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T00:27:05.508Z"
   },
   {
    "duration": 154,
    "start_time": "2023-09-08T00:27:12.575Z"
   },
   {
    "duration": 270,
    "start_time": "2023-09-08T00:27:16.007Z"
   },
   {
    "duration": 52,
    "start_time": "2023-09-08T11:40:17.648Z"
   },
   {
    "duration": 1529,
    "start_time": "2023-09-08T11:40:24.003Z"
   },
   {
    "duration": 624,
    "start_time": "2023-09-08T11:40:25.536Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-08T11:40:26.162Z"
   },
   {
    "duration": 133,
    "start_time": "2023-09-08T11:40:26.169Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-08T11:40:26.303Z"
   },
   {
    "duration": 55,
    "start_time": "2023-09-08T11:40:26.312Z"
   },
   {
    "duration": 31,
    "start_time": "2023-09-08T11:40:26.369Z"
   },
   {
    "duration": 47,
    "start_time": "2023-09-08T11:40:26.401Z"
   },
   {
    "duration": 210,
    "start_time": "2023-09-08T11:40:26.450Z"
   },
   {
    "duration": 1016,
    "start_time": "2023-09-08T11:40:26.663Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T11:40:27.681Z"
   },
   {
    "duration": 29,
    "start_time": "2023-09-08T11:40:27.687Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-08T11:40:27.742Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-08T11:40:27.755Z"
   },
   {
    "duration": 237,
    "start_time": "2023-09-08T11:40:27.766Z"
   },
   {
    "duration": 9,
    "start_time": "2023-09-08T11:40:28.004Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-08T11:40:28.015Z"
   },
   {
    "duration": 338,
    "start_time": "2023-09-08T11:40:28.035Z"
   },
   {
    "duration": 24,
    "start_time": "2023-09-08T11:40:28.374Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-08T11:40:28.400Z"
   },
   {
    "duration": 48,
    "start_time": "2023-09-08T11:40:28.445Z"
   },
   {
    "duration": 45,
    "start_time": "2023-09-08T11:40:28.495Z"
   },
   {
    "duration": 79,
    "start_time": "2023-09-08T11:40:28.541Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-08T11:40:28.622Z"
   },
   {
    "duration": 17,
    "start_time": "2023-09-08T11:40:28.649Z"
   },
   {
    "duration": 484,
    "start_time": "2023-09-08T11:40:28.667Z"
   },
   {
    "duration": 134,
    "start_time": "2023-09-08T11:40:29.154Z"
   },
   {
    "duration": 505,
    "start_time": "2023-09-08T11:40:29.291Z"
   },
   {
    "duration": 5,
    "start_time": "2023-09-08T11:40:29.798Z"
   },
   {
    "duration": 153,
    "start_time": "2023-09-08T11:40:29.804Z"
   },
   {
    "duration": 34,
    "start_time": "2023-09-08T11:40:29.959Z"
   },
   {
    "duration": 58,
    "start_time": "2023-09-08T11:40:29.995Z"
   },
   {
    "duration": 118,
    "start_time": "2023-09-08T11:40:30.054Z"
   },
   {
    "duration": 7,
    "start_time": "2023-09-08T11:40:30.174Z"
   },
   {
    "duration": 130,
    "start_time": "2023-09-08T11:40:30.183Z"
   },
   {
    "duration": 49,
    "start_time": "2023-09-08T11:40:30.315Z"
   },
   {
    "duration": 68,
    "start_time": "2023-09-08T11:40:30.367Z"
   },
   {
    "duration": 49,
    "start_time": "2023-09-08T11:40:30.438Z"
   },
   {
    "duration": 1726,
    "start_time": "2023-09-19T10:33:11.908Z"
   },
   {
    "duration": 637,
    "start_time": "2023-09-19T10:33:13.636Z"
   },
   {
    "duration": 4,
    "start_time": "2023-09-19T10:33:14.275Z"
   },
   {
    "duration": 177,
    "start_time": "2023-09-19T10:33:14.282Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-19T10:33:14.461Z"
   },
   {
    "duration": 30,
    "start_time": "2023-09-19T10:33:14.470Z"
   },
   {
    "duration": 72,
    "start_time": "2023-09-19T10:33:14.501Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-19T10:33:14.575Z"
   },
   {
    "duration": 230,
    "start_time": "2023-09-19T10:33:14.596Z"
   },
   {
    "duration": 1220,
    "start_time": "2023-09-19T10:33:14.829Z"
   },
   {
    "duration": 11,
    "start_time": "2023-09-19T10:33:16.052Z"
   },
   {
    "duration": 37,
    "start_time": "2023-09-19T10:33:16.065Z"
   },
   {
    "duration": 12,
    "start_time": "2023-09-19T10:33:16.104Z"
   },
   {
    "duration": 37,
    "start_time": "2023-09-19T10:33:16.118Z"
   },
   {
    "duration": 228,
    "start_time": "2023-09-19T10:33:16.158Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-19T10:33:16.388Z"
   },
   {
    "duration": 8,
    "start_time": "2023-09-19T10:33:16.398Z"
   },
   {
    "duration": 372,
    "start_time": "2023-09-19T10:33:16.408Z"
   },
   {
    "duration": 23,
    "start_time": "2023-09-19T10:33:16.782Z"
   },
   {
    "duration": 40,
    "start_time": "2023-09-19T10:33:16.807Z"
   },
   {
    "duration": 42,
    "start_time": "2023-09-19T10:33:16.849Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-19T10:33:16.893Z"
   },
   {
    "duration": 108,
    "start_time": "2023-09-19T10:33:16.923Z"
   },
   {
    "duration": 14,
    "start_time": "2023-09-19T10:33:17.033Z"
   },
   {
    "duration": 19,
    "start_time": "2023-09-19T10:33:17.049Z"
   },
   {
    "duration": 555,
    "start_time": "2023-09-19T10:33:17.070Z"
   },
   {
    "duration": 165,
    "start_time": "2023-09-19T10:33:17.627Z"
   },
   {
    "duration": 597,
    "start_time": "2023-09-19T10:33:17.795Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-19T10:33:18.394Z"
   },
   {
    "duration": 158,
    "start_time": "2023-09-19T10:33:18.401Z"
   },
   {
    "duration": 40,
    "start_time": "2023-09-19T10:33:18.561Z"
   },
   {
    "duration": 71,
    "start_time": "2023-09-19T10:33:18.603Z"
   },
   {
    "duration": 114,
    "start_time": "2023-09-19T10:33:18.677Z"
   },
   {
    "duration": 6,
    "start_time": "2023-09-19T10:33:18.793Z"
   },
   {
    "duration": 28,
    "start_time": "2023-09-19T10:33:18.801Z"
   },
   {
    "duration": 27,
    "start_time": "2023-09-19T10:33:18.830Z"
   },
   {
    "duration": 38,
    "start_time": "2023-09-19T10:33:18.861Z"
   },
   {
    "duration": 43,
    "start_time": "2023-09-19T10:33:18.901Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "248.899px"
   },
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
